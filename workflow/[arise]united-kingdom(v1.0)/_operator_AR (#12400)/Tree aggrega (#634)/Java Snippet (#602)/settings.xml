<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
<entry key="node_file" type="xstring" value="settings.xml"/>
<config key="flow_stack">
<config key="Variable_0">
<entry key="type" type="xstring" value="variable"/>
<entry key="name" type="xstring" value="column_pairs"/>
<entry key="class" type="xstring" value="STRING"/>
<entry key="value" type="xstring" value=""/>
</config>
<config key="Variable_1">
<entry key="type" type="xstring" value="variable"/>
<entry key="name" type="xstring" value="new_column_list"/>
<entry key="class" type="xstring" value="STRING"/>
<entry key="value" type="xstring" value=""/>
</config>
<config key="Variable_2">
<entry key="type" type="xstring" value="variable"/>
<entry key="name" type="xstring" value="columns_used"/>
<entry key="class" type="xstring" value="STRING"/>
<entry key="value" type="xstring" value=""/>
</config>
<config key="Variable_3">
<entry key="type" type="xstring" value="variable"/>
<entry key="name" type="xstring" value="column_pairs"/>
<entry key="class" type="xstring" value="STRING"/>
<entry key="value" type="xstring" value="dat_food-domestic-supply_animal-fats[kcal],dat_food-energy-content_animal-fats[kcal/t];dat_food-domestic-supply_cereal-others[kcal],dat_food-energy-content_cereal-others[kcal/t];dat_food-domestic-supply_fish-seafood[kcal],dat_food-energy-content_fish-seafood[kcal/t];dat_food-domestic-supply_fruits-excluding-wine[kcal],dat_food-energy-content_fruits-excluding-wine[kcal/t];dat_food-domestic-supply_oilcrop-others[kcal],dat_food-energy-content_oilcrop-others[kcal/t];dat_food-domestic-supply_palm[kcal],dat_food-energy-content_palm[kcal/t];dat_food-domestic-supply_sugar-&amp;-sweeteners[kcal],dat_food-energy-content_sugar-&amp;-sweeteners[kcal/t];dat_food-domestic-supply_barley-and-products[kcal],dat_food-energy-content_barley-and-products[kcal/t];dat_food-domestic-supply_beer[kcal],dat_food-energy-content_beer[kcal/t];dat_food-domestic-supply_beverages-alcoholic[kcal],dat_food-energy-content_beverages-alcoholic[kcal/t];dat_food-domestic-supply_beverages-fermented[kcal],dat_food-energy-content_beverages-fermented[kcal/t];dat_food-domestic-supply_bovine-meat[kcal],dat_food-energy-content_bovine-meat[kcal/t];dat_food-domestic-supply_cocoa-beans-and-products[kcal],dat_food-energy-content_cocoa-beans-and-products[kcal/t];dat_food-domestic-supply_coffee-and-products[kcal],dat_food-energy-content_coffee-and-products[kcal/t];dat_food-domestic-supply_eggs[kcal],dat_food-energy-content_eggs[kcal/t];dat_food-domestic-supply_maize-and-products[kcal],dat_food-energy-content_maize-and-products[kcal/t];dat_food-domestic-supply_meat-other[kcal],dat_food-energy-content_meat-other[kcal/t];dat_food-domestic-supply_milk-excluding-butter[kcal],dat_food-energy-content_milk-excluding-butter[kcal/t];dat_food-domestic-supply_mutton-&amp;-goat-meat[kcal],dat_food-energy-content_mutton-&amp;-goat-meat[kcal/t];dat_food-domestic-supply_nuts-and-products[kcal],dat_food-energy-content_nuts-and-products[kcal/t];dat_food-domestic-supply_offals[kcal],dat_food-energy-content_offals[kcal/t];dat_food-domestic-supply_olive-oil[kcal],dat_food-energy-content_olive-oil[kcal/t];dat_food-domestic-supply_olives-including-preserved[kcal],dat_food-energy-content_olives-including-preserved[kcal/t];dat_food-domestic-supply_palm-oil[kcal],dat_food-energy-content_palm-oil[kcal/t];dat_food-domestic-supply_pigmeat[kcal],dat_food-energy-content_pigmeat[kcal/t];dat_food-domestic-supply_poultry-meat[kcal],dat_food-energy-content_poultry-meat[kcal/t];dat_food-domestic-supply_pulses[kcal],dat_food-energy-content_pulses[kcal/t];dat_food-domestic-supply_rape-and-mustard-oil[kcal],dat_food-energy-content_rape-and-mustard-oil[kcal/t];dat_food-domestic-supply_rape-and-mustardseed[kcal],dat_food-energy-content_rape-and-mustardseed[kcal/t];dat_food-domestic-supply_rice-milled-equivalent[kcal],dat_food-energy-content_rice-milled-equivalent[kcal/t];dat_food-domestic-supply_rye-and-products[kcal],dat_food-energy-content_rye-and-products[kcal/t];dat_food-domestic-supply_soyabean-oil[kcal],dat_food-energy-content_soyabean-oil[kcal/t];dat_food-domestic-supply_soyabeans[kcal],dat_food-energy-content_soyabeans[kcal/t];dat_food-domestic-supply_starchy-roots[kcal],dat_food-energy-content_starchy-roots[kcal/t];dat_food-domestic-supply_sunflower-seed[kcal],dat_food-energy-content_sunflower-seed[kcal/t];dat_food-domestic-supply_sunflowerseed-oil[kcal],dat_food-energy-content_sunflowerseed-oil[kcal/t];dat_food-domestic-supply_tea-including-mate[kcal],dat_food-energy-content_tea-including-mate[kcal/t];dat_food-domestic-supply_vegetables[kcal],dat_food-energy-content_vegetables[kcal/t];dat_food-domestic-supply_wheat-and-products[kcal],dat_food-energy-content_wheat-and-products[kcal/t];dat_food-domestic-supply_wine[kcal],dat_food-energy-content_wine[kcal/t];"/>
</config>
<config key="Variable_4">
<entry key="type" type="xstring" value="variable"/>
<entry key="name" type="xstring" value="new_column_list"/>
<entry key="class" type="xstring" value="STRING"/>
<entry key="value" type="xstring" value="dat_food-domestic-supply_animal-fats[t],dat_food-domestic-supply_cereal-others[t],dat_food-domestic-supply_fish-seafood[t],dat_food-domestic-supply_fruits-excluding-wine[t],dat_food-domestic-supply_oilcrop-others[t],dat_food-domestic-supply_palm[t],dat_food-domestic-supply_sugar-&amp;-sweeteners[t],dat_food-domestic-supply_barley-and-products[t],dat_food-domestic-supply_beer[t],dat_food-domestic-supply_beverages-alcoholic[t],dat_food-domestic-supply_beverages-fermented[t],dat_food-domestic-supply_bovine-meat[t],dat_food-domestic-supply_cocoa-beans-and-products[t],dat_food-domestic-supply_coffee-and-products[t],dat_food-domestic-supply_eggs[t],dat_food-domestic-supply_maize-and-products[t],dat_food-domestic-supply_meat-other[t],dat_food-domestic-supply_milk-excluding-butter[t],dat_food-domestic-supply_mutton-&amp;-goat-meat[t],dat_food-domestic-supply_nuts-and-products[t],dat_food-domestic-supply_offals[t],dat_food-domestic-supply_olive-oil[t],dat_food-domestic-supply_olives-including-preserved[t],dat_food-domestic-supply_palm-oil[t],dat_food-domestic-supply_pigmeat[t],dat_food-domestic-supply_poultry-meat[t],dat_food-domestic-supply_pulses[t],dat_food-domestic-supply_rape-and-mustard-oil[t],dat_food-domestic-supply_rape-and-mustardseed[t],dat_food-domestic-supply_rice-milled-equivalent[t],dat_food-domestic-supply_rye-and-products[t],dat_food-domestic-supply_soyabean-oil[t],dat_food-domestic-supply_soyabeans[t],dat_food-domestic-supply_starchy-roots[t],dat_food-domestic-supply_sunflower-seed[t],dat_food-domestic-supply_sunflowerseed-oil[t],dat_food-domestic-supply_tea-including-mate[t],dat_food-domestic-supply_vegetables[t],dat_food-domestic-supply_wheat-and-products[t],dat_food-domestic-supply_wine[t],"/>
</config>
<config key="Variable_5">
<entry key="type" type="xstring" value="variable"/>
<entry key="name" type="xstring" value="columns_used"/>
<entry key="class" type="xstring" value="STRING"/>
<entry key="value" type="xstring" value="dat_food-domestic-supply_animal-fats[kcal],dat_food-energy-content_animal-fats[kcal/t],dat_food-domestic-supply_cereal-others[kcal],dat_food-energy-content_cereal-others[kcal/t],dat_food-domestic-supply_fish-seafood[kcal],dat_food-energy-content_fish-seafood[kcal/t],dat_food-domestic-supply_fruits-excluding-wine[kcal],dat_food-energy-content_fruits-excluding-wine[kcal/t],dat_food-domestic-supply_oilcrop-others[kcal],dat_food-energy-content_oilcrop-others[kcal/t],dat_food-domestic-supply_palm[kcal],dat_food-energy-content_palm[kcal/t],dat_food-domestic-supply_sugar-&amp;-sweeteners[kcal],dat_food-energy-content_sugar-&amp;-sweeteners[kcal/t],dat_food-domestic-supply_barley-and-products[kcal],dat_food-energy-content_barley-and-products[kcal/t],dat_food-domestic-supply_beer[kcal],dat_food-energy-content_beer[kcal/t],dat_food-domestic-supply_beverages-alcoholic[kcal],dat_food-energy-content_beverages-alcoholic[kcal/t],dat_food-domestic-supply_beverages-fermented[kcal],dat_food-energy-content_beverages-fermented[kcal/t],dat_food-domestic-supply_bovine-meat[kcal],dat_food-energy-content_bovine-meat[kcal/t],dat_food-domestic-supply_cocoa-beans-and-products[kcal],dat_food-energy-content_cocoa-beans-and-products[kcal/t],dat_food-domestic-supply_coffee-and-products[kcal],dat_food-energy-content_coffee-and-products[kcal/t],dat_food-domestic-supply_eggs[kcal],dat_food-energy-content_eggs[kcal/t],dat_food-domestic-supply_maize-and-products[kcal],dat_food-energy-content_maize-and-products[kcal/t],dat_food-domestic-supply_meat-other[kcal],dat_food-energy-content_meat-other[kcal/t],dat_food-domestic-supply_milk-excluding-butter[kcal],dat_food-energy-content_milk-excluding-butter[kcal/t],dat_food-domestic-supply_mutton-&amp;-goat-meat[kcal],dat_food-energy-content_mutton-&amp;-goat-meat[kcal/t],dat_food-domestic-supply_nuts-and-products[kcal],dat_food-energy-content_nuts-and-products[kcal/t],dat_food-domestic-supply_offals[kcal],dat_food-energy-content_offals[kcal/t],dat_food-domestic-supply_olive-oil[kcal],dat_food-energy-content_olive-oil[kcal/t],dat_food-domestic-supply_olives-including-preserved[kcal],dat_food-energy-content_olives-including-preserved[kcal/t],dat_food-domestic-supply_palm-oil[kcal],dat_food-energy-content_palm-oil[kcal/t],dat_food-domestic-supply_pigmeat[kcal],dat_food-energy-content_pigmeat[kcal/t],dat_food-domestic-supply_poultry-meat[kcal],dat_food-energy-content_poultry-meat[kcal/t],dat_food-domestic-supply_pulses[kcal],dat_food-energy-content_pulses[kcal/t],dat_food-domestic-supply_rape-and-mustard-oil[kcal],dat_food-energy-content_rape-and-mustard-oil[kcal/t],dat_food-domestic-supply_rape-and-mustardseed[kcal],dat_food-energy-content_rape-and-mustardseed[kcal/t],dat_food-domestic-supply_rice-milled-equivalent[kcal],dat_food-energy-content_rice-milled-equivalent[kcal/t],dat_food-domestic-supply_rye-and-products[kcal],dat_food-energy-content_rye-and-products[kcal/t],dat_food-domestic-supply_soyabean-oil[kcal],dat_food-energy-content_soyabean-oil[kcal/t],dat_food-domestic-supply_soyabeans[kcal],dat_food-energy-content_soyabeans[kcal/t],dat_food-domestic-supply_starchy-roots[kcal],dat_food-energy-content_starchy-roots[kcal/t],dat_food-domestic-supply_sunflower-seed[kcal],dat_food-energy-content_sunflower-seed[kcal/t],dat_food-domestic-supply_sunflowerseed-oil[kcal],dat_food-energy-content_sunflowerseed-oil[kcal/t],dat_food-domestic-supply_tea-including-mate[kcal],dat_food-energy-content_tea-including-mate[kcal/t],dat_food-domestic-supply_vegetables[kcal],dat_food-energy-content_vegetables[kcal/t],dat_food-domestic-supply_wheat-and-products[kcal],dat_food-energy-content_wheat-and-products[kcal/t],dat_food-domestic-supply_wine[kcal],dat_food-energy-content_wine[kcal/t],"/>
</config>
</config>
<config key="internal_node_subsettings">
<entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
</config>
<config key="model">
<entry key="scriptImports" type="xstring" value="// Your custom imports:%%00010import java.util.regex.Matcher;%%00010import java.util.regex.Pattern;%%00010import java.util.ArrayList;%%00010"/>
<entry key="scriptFields" type="xstring" value="// Your custom variables:%%00010"/>
<entry key="scriptBody" type="xstring" value="// Enter your code here:%%00010%%00010out_new_column_list = &quot;&quot;;%%00010out_columns_used = &quot;&quot;;%%00010out_column_pairs = &quot;&quot;;%%00010Integer c = getColumnCount();%%00010%%00010// Regex patterns%%00010Pattern pattern_i = Pattern.compile(v_index_pattern);%%00010Pattern pattern_a = Pattern.compile(v_aggregation_pattern);%%00010Pattern pattern_u = Pattern.compile(&quot;.*\\[(.*)].*&quot;);%%00010Integer numIterations=0;%%00010%%00010// First search loop%%00010Boolean isMatching1 = false;%%00010Integer numberGroups1 = 0;%%00010for (int i=0;i&lt;c;i++) {%%00010%%00009numIterations++;%%00010%%00009String colName1 = getColumnName(i);%%00010%%00009Matcher matcher1 = pattern_i.matcher(colName1);%%00010%%00009Matcher matcher_unit = pattern_u.matcher(colName1);%%00010%%00009numberGroups1 = matcher1.groupCount();%%00010%%00009if (numberGroups1 == 0 ) {%%00010%%00009%%00009Abort e=new Abort(&quot;No capture group found in the index pattern  '&quot;+v_index_pattern+&quot;'&quot;);%%00010%%00009%%00009throw e;%%00010%%00009}%%00010%%00010%%00009// Handles new column units. If &quot;unit&quot;, uses the input column's unit (if there is a match)%%00010%%00009String colUnit = v_unit_var;%%00010%%00009if (matcher_unit.matches() &amp;&amp; colUnit.equals(&quot;unit&quot;)) {%%00010%%00009%%00009colUnit = matcher_unit.group(1);%%00010%%00009}%%00010%%00010%%00009if (matcher1.matches()) {%%00010%%00009%%00010%%00009%%00009isMatching1 = true; // Record that we found a match%%00010%%00009%%00009String iterator1 = matcher1.group(1);%%00010%%00009%%00009logInfo(&quot;Loop 1 (iteration &quot; + i +&quot;): &quot;+colName1 + &quot; matches &quot; + v_index_pattern + &quot;, iterator: &quot;+iterator1);%%00010%%00010%%00009%%00009// Second search loop%%00010%%00009%%00009Boolean isMatching2 = false;%%00010%%00009%%00009Boolean matchingIterator = false;%%00010%%00009%%00009Integer numberGroups2 = 0;%%00010%%00009%%00009for (int j=0;j&lt;c;j++) {%%00010%%00009%%00009%%00009String colName2 = getColumnName(j);%%00010%%00009%%00009%%00009Matcher matcher2 = pattern_a.matcher(colName2);%%00010%%00009%%00009%%00009numberGroups2 = matcher2.groupCount();%%00010%%00010%%00009%%00009%%00009if(matcher2.matches()) {%%00010%%00009%%00010%%00009%%00009%%00009%%00009isMatching2 = true; // Record that we found a match%%00010%%00010%%00009%%00009%%00009%%00009if(numberGroups2 == 0 ) { // Tree split%%00010%%00009%%00009%%00009%%00009%%00009logInfo(&quot;Loop 1 (iteration &quot; + i +&quot;): Loop 2 (iteration &quot; + j +&quot;) : &quot;+colName2 + &quot; matches &quot; + v_aggregation_pattern);%%00010%%00009%%00009%%00009%%00009%%00009out_new_column_list = out_new_column_list + v_new_name_start + &quot;_&quot; + iterator1 + &quot;[&quot; + colUnit + &quot;],&quot;; %%00010%%00009%%00009%%00009%%00009%%00009out_columns_used = out_columns_used + colName1 + &quot;,&quot; + colName2 + &quot;,&quot;;%%00010%%00009%%00009%%00009%%00009%%00009out_column_pairs = out_column_pairs + colName1 + &quot;,&quot; + colName2 + &quot;;&quot;;%%00010%%00009%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009%%00009} else if (numberGroups2 == 1 || numberGroups2 ==2 ) { // Parallel op%%00010%%00009%%00009%%00009%%00009// Tests if the capturing group is the same%%00010%%00009%%00009%%00009%%00009%%00009String iterator2 = matcher2.group(1);%%00010%%00009%%00009%%00009%%00009%%00009if (iterator1.equals(iterator2)) {%%00010%%00009%%00009%%00009%%00009%%00009%%00009logInfo(&quot;Loop 1 (iteration &quot; + i +&quot;): Loop 2 (iteration &quot; + j +&quot;) : &quot;+colName2 + &quot; matches &quot; + v_aggregation_pattern + &quot;, iterator1: &quot;+iterator1+ &quot; matches iterator2: &quot; + iterator2);%%00010%%00009%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009%%00009%%00009%%00009matchingIterator = true; // Record we found a match%%00010%%00009%%00009%%00009%%00009%%00009%%00009out_new_column_list = out_new_column_list + v_new_name_start + &quot;_&quot; + iterator1;%%00010%%00009%%00009%%00009%%00009%%00009%%00009if (numberGroups1 == 2) {%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009out_new_column_list = out_new_column_list + &quot;_&quot; + matcher1.group(2);%%00010%%00009%%00009%%00009%%00009%%00009%%00009} %%00010%%00009%%00009%%00009%%00009%%00009%%00009if (numberGroups2 == 2) {%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009out_new_column_list = out_new_column_list + &quot;_&quot; + matcher2.group(2);%%00010%%00009%%00009%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009%%00009%%00009out_new_column_list = out_new_column_list  + &quot;[&quot; + colUnit + &quot;],&quot;;%%00010%%00009%%00009%%00009%%00009%%00009%%00009out_columns_used = out_columns_used + colName1 + &quot;,&quot; + colName2 + &quot;,&quot;;%%00010%%00009%%00009%%00009%%00009%%00009%%00009out_column_pairs = out_column_pairs + colName1 + &quot;,&quot; + colName2 + &quot;;&quot;;%%00010%%00009%%00009%%00009%%00009%%00009%%00009//break;%%00010%%00009%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009}%%00010%%00009%%00009}%%00010%%00009%%00009if (!isMatching2) {%%00010%%00009%%00009%%00009Abort e=new Abort(&quot;No match found in input columns for pattern '&quot;+v_aggregation_pattern+&quot;'&quot;);%%00010%%00009%%00009%%00009throw e;%%00010%%00009%%00009}%%00010%%00009%%00009if (!matchingIterator &amp;&amp; numberGroups2 == 1) {%%00010%%00009%%00009%%00009Abort e=new Abort(&quot;Iterator not found in second column group: '&quot;+iterator1+&quot;'&quot;);%%00010%%00009%%00009%%00009throw e;%%00010%%00009%%00009}%%00010%%00009}%%00010}%%00010if (!isMatching1) {%%00010%%00009Abort e=new Abort(&quot;No match found in input columns for pattern \&quot;&quot;+v_index_pattern+&quot;\&quot;&quot;);%%00010%%00009throw e;%%00010}%%00010logInfo(&quot;Num iterations &quot;+numIterations);%%00010logInfo(ROWINDEX);%%00010 %%00010"/>
<config key="jarFiles">
<entry key="array-size" type="xint" value="0"/>
</config>
<config key="outCols">
<entry key="array-size" type="xint" value="0"/>
</config>
<config key="outVars">
<entry key="array-size" type="xint" value="3"/>
<config key="0">
<entry key="Name" type="xstring" value="column_pairs"/>
<entry key="JavaName" type="xstring" value="out_column_pairs"/>
<entry key="JavaType" type="xstring" value="java.lang.String"/>
<entry key="Type" type="xstring" value="STRING"/>
<entry key="replaceExisting" type="xboolean" value="false"/>
</config>
<config key="1">
<entry key="Name" type="xstring" value="new_column_list"/>
<entry key="JavaName" type="xstring" value="out_new_column_list"/>
<entry key="JavaType" type="xstring" value="java.lang.String"/>
<entry key="Type" type="xstring" value="STRING"/>
<entry key="replaceExisting" type="xboolean" value="false"/>
</config>
<config key="2">
<entry key="Name" type="xstring" value="columns_used"/>
<entry key="JavaName" type="xstring" value="out_columns_used"/>
<entry key="JavaType" type="xstring" value="java.lang.String"/>
<entry key="Type" type="xstring" value="STRING"/>
<entry key="replaceExisting" type="xboolean" value="false"/>
</config>
</config>
<config key="inCols">
<entry key="array-size" type="xint" value="0"/>
</config>
<config key="inVars">
<entry key="array-size" type="xint" value="5"/>
<config key="0">
<entry key="Name" type="xstring" value="new_name_start"/>
<entry key="JavaName" type="xstring" value="v_new_name_start"/>
<entry key="JavaType" type="xstring" value="java.lang.String"/>
<entry key="Type" type="xstring" value="STRING"/>
</config>
<config key="1">
<entry key="Name" type="xstring" value="unit_var"/>
<entry key="JavaName" type="xstring" value="v_unit_var"/>
<entry key="JavaType" type="xstring" value="java.lang.String"/>
<entry key="Type" type="xstring" value="STRING"/>
</config>
<config key="2">
<entry key="Name" type="xstring" value="aggregation_method"/>
<entry key="JavaName" type="xstring" value="v_aggregation_method"/>
<entry key="JavaType" type="xstring" value="java.lang.String"/>
<entry key="Type" type="xstring" value="STRING"/>
</config>
<config key="3">
<entry key="Name" type="xstring" value="index_pattern"/>
<entry key="JavaName" type="xstring" value="v_index_pattern"/>
<entry key="JavaType" type="xstring" value="java.lang.String"/>
<entry key="Type" type="xstring" value="STRING"/>
</config>
<config key="4">
<entry key="Name" type="xstring" value="aggregation_pattern"/>
<entry key="JavaName" type="xstring" value="v_aggregation_pattern"/>
<entry key="JavaType" type="xstring" value="java.lang.String"/>
<entry key="Type" type="xstring" value="STRING"/>
</config>
</config>
<entry key="version" type="xstring" value="version 1.x"/>
<entry key="templateUUID" type="xstring" value="611e6fc8-655b-4ae9-9c98-7b9096af7b7d"/>
<entry key="runOnExecute" type="xboolean" value="false"/>
<config key="bundles">
<entry key="array-size" type="xint" value="0"/>
</config>
</config>
<config key="nodeAnnotation">
<entry key="text" type="xstring" value="Calculates new column"/>
<entry key="bgcolor" type="xint" value="16777215"/>
<entry key="x-coordinate" type="xint" value="311"/>
<entry key="y-coordinate" type="xint" value="324"/>
<entry key="width" type="xint" value="129"/>
<entry key="height" type="xint" value="15"/>
<entry key="alignment" type="xstring" value="CENTER"/>
<entry key="borderSize" type="xint" value="0"/>
<entry key="borderColor" type="xint" value="16777215"/>
<entry key="defFontSize" type="xint" value="9"/>
<entry key="annotation-version" type="xint" value="20151123"/>
<config key="styles"/>
</config>
<entry key="customDescription" type="xstring" isnull="true" value=""/>
<entry key="state" type="xstring" value="EXECUTED"/>
<entry key="factory" type="xstring" value="org.knime.base.node.jsnippet.JavaSnippetNodeFactory"/>
<entry key="node-name" type="xstring" value="Java Snippet"/>
<entry key="node-bundle-name" type="xstring" value="KNIME Java Snippet Nodes"/>
<entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.jsnippets"/>
<entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-bundle-version" type="xstring" value="4.3.0.v202011191508"/>
<entry key="node-feature-name" type="xstring" value="KNIME Javasnippet"/>
<entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.javasnippet.feature.group"/>
<entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-feature-version" type="xstring" value="4.3.0.v202011191508"/>
<config key="factory_settings"/>
<entry key="name" type="xstring" value="Java Snippet"/>
<entry key="hasContent" type="xboolean" value="true"/>
<entry key="isInactive" type="xboolean" value="false"/>
<config key="ports">
<config key="port_1">
<entry key="index" type="xint" value="1"/>
<entry key="port_spec_class" type="xstring" value="org.knime.core.data.DataTableSpec"/>
<entry key="port_object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
<entry key="port_object_summary" type="xstring" value="Rows: 1, Cols: 82"/>
<entry key="port_dir_location" type="xstring" value="port_1"/>
</config>
</config>
<config key="filestores">
<entry key="file_store_location" type="xstring" isnull="true" value=""/>
<entry key="file_store_id" type="xstring" value="68693e0d-c0c3-481f-9cc7-95c01e20fadf"/>
</config>
</config>
