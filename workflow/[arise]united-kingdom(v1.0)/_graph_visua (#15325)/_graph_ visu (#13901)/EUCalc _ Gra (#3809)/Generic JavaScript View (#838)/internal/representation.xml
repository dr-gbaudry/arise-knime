<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="viewRepresentation">
<entry key="jsCode" type="xstring" value="var body = document.getElementsByTagName(&quot;body&quot;)[0];%%00010var html = '&lt;script src=&quot;https://code.highcharts.com/highcharts.js&quot;&gt;&lt;/script&gt;';%%00010html += '&lt;script src=&quot;https://code.highcharts.com/modules/exporting.js&quot;&gt;&lt;/script&gt;';%%00010html += '&lt;script src=&quot;https://code.highcharts.com/modules/export-data.js&quot;&gt;&lt;/script&gt;';%%00010html += '&lt;div id=&quot;container&quot;&gt;&lt;/div&gt;';%%00010body.innerHTML = html;%%00010%%00010require.config({%%00010    packages: [{%%00010        name: 'highcharts',%%00010        main: 'highcharts'%%00010    }],%%00010    paths: {%%00010        // Change this to your server if you do not wish to use our CDN.%%00010        'highcharts': 'https://code.highcharts.com'%%00010    }%%00010});%%00010%%00010%%00010var data = knimeDataTable.getRows();%%00010// Extract Years column and x values%%00010var x_column_name = &quot;Years&quot;;%%00010var x_column = knimeDataTable.getColumnNames().indexOf(x_column_name);%%00010var x_values = knimeDataTable.getColumn(x_column);%%00010// Create dataset for values%%00010var dataset = [];%%00010%%00010for (var colID = 0; colID &lt; knimeDataTable.getNumColumns(); colID++) {%%00010  var colType = knimeDataTable.getColumnTypes()[colID];%%00010  var colName = knimeDataTable.getColumnNames()[colID];%%00010  //console.log('colomn name',colName)%%00010  if (colType === &quot;number&quot;) {%%00010    dataset.push({%%00010      name: colName,%%00010      //values: data.map(function(d) { // Data%%00010      //       return {x: d.data[x_column], y: d.data[colID]};%%00010      //       })%%00010      data: data.map(function(d) {%%00010        return [parseInt(d.data[x_column]),d.data[colID]];%%00010      })%%00010    });%%00010    console.log(dataset)%%00010  }%%00010}%%00010%%00010var chartData = {%%00010  series: dataset,%%00010  title: &quot;UK - mineral-soil, Meadows &amp; Pastures [tC]&quot;,%%00010  timeAxis: x_values,%%00010  unit: &quot;tC&quot;%%00010};%%00010%%00010//console.log('chartData', chartData)%%00010%%00010require(['highcharts/modules/exporting', 'highcharts/modules/export-data'], function({Highcharts}) {%%00010    %%00010    Highcharts.chart('container', {%%00010    chart: {%%00010      renderTo: ServiceWorkerContainer,%%00010      type: &quot;area&quot;,%%00010      spacingBottom: 30%%00010    },%%00010    title: {%%00010      text: chartData.title%%00010    },%%00010    //subtitle: {%%00010    //    text: 'Source: Wikipedia.org'%%00010    //},%%00010    xAxis: {%%00010        allowDecimals: false,%%00010        labels: {%%00010            formatter: function () {%%00010                return this.value; // clean, unformatted number for year%%00010            }%%00010        }%%00010    },%%00010    yAxis: {%%00010      title: {%%00010        text: chartData.unit%%00010      },%%00010      //labels: {%%00010       // formatter: function() {%%00010       //   return this.value / 1000 + 'k';%%00010       // }%%00010      //}%%00010    },%%00010    tooltip: {%%00010      split: true,%%00010      //pointFormat: '&lt;b&gt;{point.y:,.0f}&lt;/b&gt;&lt;br/&gt; in {point.x}',%%00010      pointFormat: '&lt;span style=&quot;color:{series.color}&quot;&gt;{series.name}&lt;/span&gt;: &lt;b&gt;{point.y:,.0f}&lt;/b&gt; ({point.percentage:.1f}%)&lt;br/&gt;',%%00010      valueDecimals: 2%%00010      //valueSuffix: &quot; millions&quot;%%00010    },%%00010    plotOptions: {%%00010      area: {%%00010        stacking: &quot;normal&quot;,%%00010        lineColor: &quot;#666666&quot;,%%00010        lineWidth: 1,%%00010        marker: {%%00010          lineWidth: 1,%%00010          lineColor: &quot;#666666&quot;,%%00010          enabled:false,%%00010          symbol:'circle',%%00010          radius:2%%00010        }%%00010      }%%00010    },%%00010    responsive: {%%00010      rules: [%%00010        {%%00010          condition: {%%00010            maxWidth: 500%%00010          }%%00010        }%%00010      ]%%00010    },%%00010    series: chartData.series%%00010  });%%00010});%%00010"/>
<entry key="jsSVGCode" type="xstring" value=""/>
<entry key="cssCode" type="xstring" value="body {%%00010    font-family: sans-serif;%%00010}%%00010h1 {%%00010    font-size: 1.5em;%%00010    font-weight: bold;%%00010}%%00010.success {%%00010    color: #006633;%%00010    font-weight: bold;%%00010}%%00010%%00010.failure {%%00010    color: #990000;%%00010    font-weight: bold;%%00010}%%00010%%00010#container {%%00010    min-width: 300px;%%00010    max-width: 1600px;%%00010    height: 500px;%%00010    margin: 1em auto;%%00010}%%00010"/>
<config key="jsDependencies">
<entry key="array-size" type="xint" value="0"/>
</config>
<config key="jsExports">
<entry key="array-size" type="xint" value="0"/>
</config>
<config key="cssDependencies">
<entry key="array-size" type="xint" value="0"/>
</config>
<entry key="knimeDataTableJSON" type="xstring" value="{&quot;@class&quot;:&quot;org.knime.js.core.JSONDataTable&quot;,&quot;id&quot;:&quot;175be079-e606-49bb-95b8-f81239bafcf1&quot;,&quot;fragment&quot;:false,&quot;filtered&quot;:false,&quot;rows&quot;:[{&quot;data&quot;:[&quot;1990&quot;,460147.50223382213,-1190302.6001125912,-3266602.6043470562,-496314.1180247135,0.0,0.0],&quot;rowKey&quot;:&quot;Row0&quot;},{&quot;data&quot;:[&quot;1991&quot;,476349.4452488592,-1171803.69852104,-3257329.3604581356,-479555.594431431,0.0,0.0],&quot;rowKey&quot;:&quot;Row1&quot;},{&quot;data&quot;:[&quot;1992&quot;,492242.74441087234,-1154402.8871270376,-3248933.8502269005,-464400.7178261364,0.0,0.0],&quot;rowKey&quot;:&quot;Row2&quot;},{&quot;data&quot;:[&quot;1993&quot;,507834.9698748031,-1138742.911075782,-3241383.5199109134,-453693.9314378798,0.0,0.0],&quot;rowKey&quot;:&quot;Row3&quot;},{&quot;data&quot;:[&quot;1994&quot;,523133.4691769473,-1123324.5447536013,-3234605.470118052,-445008.88151800534,0.0,0.0],&quot;rowKey&quot;:&quot;Row4&quot;},{&quot;data&quot;:[&quot;1995&quot;,538145.3746216312,-1109049.5281851282,-3228651.6272279285,-437926.3450873548,0.0,0.0],&quot;rowKey&quot;:&quot;Row5&quot;},{&quot;data&quot;:[&quot;1996&quot;,552877.6104017387,-1095606.708615822,-3223276.1144218356,-425895.52505956515,0.0,0.0],&quot;rowKey&quot;:&quot;Row6&quot;},{&quot;data&quot;:[&quot;1997&quot;,567336.8994638053,-1082947.3006218353,-3218453.111268867,-416853.63725691626,0.0,0.0],&quot;rowKey&quot;:&quot;Row7&quot;},{&quot;data&quot;:[&quot;1998&quot;,581529.7701272911,-1071021.3131818925,-3214165.8251839047,-407829.2528743667,0.0,0.0],&quot;rowKey&quot;:&quot;Row8&quot;},{&quot;data&quot;:[&quot;1999&quot;,595462.5624674645,-1059783.8870930893,-3210349.0940540642,-396813.23490291653,0.0,0.0],&quot;rowKey&quot;:&quot;Row9&quot;},{&quot;data&quot;:[&quot;2000&quot;,665378.0817557949,-1028989.5650699472,-3038622.8341964646,-387697.89551308705,0.0,0.0],&quot;rowKey&quot;:&quot;Row10&quot;},{&quot;data&quot;:[&quot;2001&quot;,733854.2881867382,-1000080.7641396383,-2876718.454259313,-385530.003515484,0.0,0.0],&quot;rowKey&quot;:&quot;Row11&quot;},{&quot;data&quot;:[&quot;2002&quot;,800929.5283071286,-972805.5319973715,-2724012.0894732624,-382979.500070626,0.0,0.0],&quot;rowKey&quot;:&quot;Row12&quot;},{&quot;data&quot;:[&quot;2003&quot;,866640.9298139308,-947067.126346703,-2579932.3696590285,-376687.1383572694,0.0,0.0],&quot;rowKey&quot;:&quot;Row13&quot;},{&quot;data&quot;:[&quot;2004&quot;,931024.444911382,-922765.9431899842,-2444242.8198354533,-368751.41478718614,0.0,0.0],&quot;rowKey&quot;:&quot;Row14&quot;},{&quot;data&quot;:[&quot;2005&quot;,994114.8920084686,-899829.527672038,-2316005.678826623,-358392.52768511075,0.0,0.0],&quot;rowKey&quot;:&quot;Row15&quot;},{&quot;data&quot;:[&quot;2006&quot;,1055945.9958254492,-878146.6369399822,-2195034.2385354997,-347567.269251089,0.0,0.0],&quot;rowKey&quot;:&quot;Row16&quot;},{&quot;data&quot;:[&quot;2007&quot;,1116550.4259710095,-857673.1468657596,-2080827.3298267964,-330226.768407482,0.0,0.0],&quot;rowKey&quot;:&quot;Row17&quot;},{&quot;data&quot;:[&quot;2008&quot;,1175959.8340533318,-838320.3720555664,-1972944.4157757398,-308173.1383991222,0.0,0.0],&quot;rowKey&quot;:&quot;Row18&quot;},{&quot;data&quot;:[&quot;2009&quot;,1234204.8893825484,-820023.4965983353,-1870770.4539510251,-284584.11801160953,0.0,0.0],&quot;rowKey&quot;:&quot;Row19&quot;},{&quot;data&quot;:[&quot;2010&quot;,1256493.995155309,-812867.9778881563,-1811160.5240967693,-265340.9915066344,0.0,0.0],&quot;rowKey&quot;:&quot;Row20&quot;},{&quot;data&quot;:[&quot;2011&quot;,1278349.5935160725,-806040.1706737059,-1754586.2502965643,-266056.69797555474,0.0,0.0],&quot;rowKey&quot;:&quot;Row21&quot;},{&quot;data&quot;:[&quot;2012&quot;,1299782.2140617266,-799578.0651108159,-1701178.9890599432,-263995.11190710246,0.0,0.0],&quot;rowKey&quot;:&quot;Row22&quot;},{&quot;data&quot;:[&quot;2013&quot;,1320802.0836329078,-792760.0704932389,-1651268.0924089234,-259557.3178969992,0.0,0.0],&quot;rowKey&quot;:&quot;Row23&quot;},{&quot;data&quot;:[&quot;2014&quot;,1341419.1361751917,-786974.4484813985,-1603545.2749163846,-250650.94389623124,0.0,0.0],&quot;rowKey&quot;:&quot;Row24&quot;},{&quot;data&quot;:[&quot;2015&quot;,1361643.0222490535,-781262.0800895444,-1559993.5405879174,-237385.465671414,0.0,0.0],&quot;rowKey&quot;:&quot;Row25&quot;},{&quot;data&quot;:[&quot;2016&quot;,1381483.1182000367,-775855.750960101,-1517239.8892132076,-224437.51459373432,0.0,0.0],&quot;rowKey&quot;:&quot;Row26&quot;},{&quot;data&quot;:[&quot;2017&quot;,1400948.5350041944,-770715.1677240462,-1476811.0249640923,-212761.7611335836,0.0,0.0],&quot;rowKey&quot;:&quot;Row27&quot;},{&quot;data&quot;:[&quot;2018&quot;,1392442.9235705363,-773940.22511373,-1431407.9992588377,-228803.3455269494,0.0,0.0],&quot;rowKey&quot;:&quot;Row28&quot;},{&quot;data&quot;:[&quot;2019&quot;,1381503.3137459615,-777939.3241569252,-1436446.1856591995,-235110.27492490195,0.0,0.0],&quot;rowKey&quot;:&quot;Row29&quot;},{&quot;data&quot;:[&quot;2020&quot;,1370565.5264157085,-780899.2704070859,-1441133.481128082,-241549.1365961959,0.0,0.0],&quot;rowKey&quot;:&quot;Row30&quot;},{&quot;data&quot;:[&quot;2021&quot;,1359631.8177808996,-783858.3827300747,-1445463.0313455402,-248084.93333033292,0.0,0.0],&quot;rowKey&quot;:&quot;Row31&quot;},{&quot;data&quot;:[&quot;2022&quot;,1351564.1032008186,-786816.6611258911,-1456414.5889594408,-251147.18366650428,0.0,0.0],&quot;rowKey&quot;:&quot;Row32&quot;},{&quot;data&quot;:[&quot;2023&quot;,1343406.0127144065,-789774.1055945365,-1467161.5693860543,-254325.6694562154,0.0,0.0],&quot;rowKey&quot;:&quot;Row33&quot;},{&quot;data&quot;:[&quot;2024&quot;,1335152.3867587643,-792730.7161360102,-1477679.7219321933,-257630.04861502277,0.0,0.0],&quot;rowKey&quot;:&quot;Row34&quot;},{&quot;data&quot;:[&quot;2025&quot;,1326798.0612681909,-795686.4927503121,-1487933.2089014866,-261072.71028899273,0.0,0.0],&quot;rowKey&quot;:&quot;Row35&quot;},{&quot;data&quot;:[&quot;2026&quot;,1318332.7183638548,-798641.4354374423,-1497850.3229910221,-264677.96863770176,0.0,0.0],&quot;rowKey&quot;:&quot;Row36&quot;},{&quot;data&quot;:[&quot;2027&quot;,1309735.7748454148,-801595.5441974007,-1507286.861614665,-268494.17240639805,0.0,0.0],&quot;rowKey&quot;:&quot;Row37&quot;},{&quot;data&quot;:[&quot;2028&quot;,1300966.263333826,-804548.8190301873,-1515952.698001613,-272617.93354032416,0.0,0.0],&quot;rowKey&quot;:&quot;Row38&quot;},{&quot;data&quot;:[&quot;2029&quot;,1291942.97116938,-807501.2599358022,-1523266.190085145,-277242.10850171454,0.0,0.0],&quot;rowKey&quot;:&quot;Row39&quot;},{&quot;data&quot;:[&quot;2030&quot;,1282506.127380358,-810452.8669142453,-1528071.8508475237,-282748.87482615386,0.0,0.0],&quot;rowKey&quot;:&quot;Row40&quot;},{&quot;data&quot;:[&quot;2031&quot;,1272346.1658255132,-813403.6399655167,-1528117.1864138048,-289882.7399212042,0.0,0.0],&quot;rowKey&quot;:&quot;Row41&quot;},{&quot;data&quot;:[&quot;2032&quot;,1260882.0736864374,-816353.5790896165,-1519172.986178444,-300043.5879624414,0.0,0.0],&quot;rowKey&quot;:&quot;Row42&quot;},{&quot;data&quot;:[&quot;2033&quot;,1247098.520324473,-819302.6842865435,-1493868.425773005,-315678.016254415,0.0,0.0],&quot;rowKey&quot;:&quot;Row43&quot;},{&quot;data&quot;:[&quot;2034&quot;,1229528.302127107,-822250.9555562998,-1441271.082168777,-340398.3102912075,0.0,0.0],&quot;rowKey&quot;:&quot;Row44&quot;},{&quot;data&quot;:[&quot;2035&quot;,1207399.1902489231,-825198.3928988843,-1367799.1473454572,-373287.8014904384,0.0,0.0],&quot;rowKey&quot;:&quot;Row45&quot;},{&quot;data&quot;:[&quot;2036&quot;,1190425.328870154,-828144.9963142968,-1309680.9259798634,-399050.16675400396,0.0,0.0],&quot;rowKey&quot;:&quot;Row46&quot;},{&quot;data&quot;:[&quot;2037&quot;,1179294.4482574086,-831090.7658025378,-1284215.9069515094,-413100.7923054829,0.0,0.0],&quot;rowKey&quot;:&quot;Row47&quot;},{&quot;data&quot;:[&quot;2038&quot;,1169582.2943594905,-834035.701363607,-1273936.6275372608,-422617.14200940856,0.0,0.0],&quot;rowKey&quot;:&quot;Row48&quot;},{&quot;data&quot;:[&quot;2039&quot;,1160161.9879379023,-836979.8029975042,-1270949.179304534,-430234.69240103546,0.0,0.0],&quot;rowKey&quot;:&quot;Row49&quot;},{&quot;data&quot;:[&quot;2040&quot;,1150753.625972661,-839923.07070423,-1271498.2366602204,-437029.02693624684,0.0,0.0],&quot;rowKey&quot;:&quot;Row50&quot;},{&quot;data&quot;:[&quot;2041&quot;,1141290.8292460518,-842865.504483784,-1273746.0690554513,-443477.7652602347,0.0,0.0],&quot;rowKey&quot;:&quot;Row51&quot;},{&quot;data&quot;:[&quot;2042&quot;,1131759.391628376,-845807.104336166,-1276779.872786981,-449805.46610993834,0.0,0.0],&quot;rowKey&quot;:&quot;Row52&quot;},{&quot;data&quot;:[&quot;2043&quot;,1122157.1502226342,-848747.8702613765,-1280142.860703025,-456121.3742700454,0.0,0.0],&quot;rowKey&quot;:&quot;Row53&quot;},{&quot;data&quot;:[&quot;2044&quot;,1112484.3508685254,-851687.8022594143,-1283605.6524992685,-462479.67688886274,0.0,0.0],&quot;rowKey&quot;:&quot;Row54&quot;},{&quot;data&quot;:[&quot;2045&quot;,1102741.4994703727,-854626.9003302814,-1287052.9224523006,-468907.57197304664,0.0,0.0],&quot;rowKey&quot;:&quot;Row55&quot;},{&quot;data&quot;:[&quot;2046&quot;,1092928.9751911857,-857565.1644739765,-1290426.7099006602,-475418.8425153168,0.0,0.0],&quot;rowKey&quot;:&quot;Row56&quot;},{&quot;data&quot;:[&quot;2047&quot;,1083047.0186482484,-860502.5946904998,-1293697.9480820426,-482020.5559179539,0.0,0.0],&quot;rowKey&quot;:&quot;Row57&quot;},{&quot;data&quot;:[&quot;2048&quot;,1073095.7765960712,-863439.1909798515,-1296852.1370974414,-488716.40494591254,0.0,0.0],&quot;rowKey&quot;:&quot;Row58&quot;},{&quot;data&quot;:[&quot;2049&quot;,1063075.339732027,-866374.9533420315,-1299882.1285435534,-495508.3822284253,0.0,0.0],&quot;rowKey&quot;:&quot;Row59&quot;},{&quot;data&quot;:[&quot;2050&quot;,1052985.8358264694,-869309.8817770396,-1302780.6236423128,-502398.50061036507,0.0,0.0],&quot;rowKey&quot;:&quot;Row60&quot;}],&quot;spec&quot;:{&quot;@class&quot;:&quot;org.knime.js.core.JSONDataTableSpec&quot;,&quot;colNames&quot;:[&quot;Years&quot;,&quot;dat_carbon-stock-mineral-soil_meadows-and-pastures-remaining-meadows-and-pastures&quot;,&quot;dat_carbon-stock-mineral-soil_meadows-and-pastures-to-artificial-land&quot;,&quot;dat_carbon-stock-mineral-soil_meadows-and-pastures-to-cropland&quot;,&quot;dat_carbon-stock-mineral-soil_meadows-and-pastures-to-forest-land&quot;,&quot;dat_carbon-stock-mineral-soil_meadows-and-pastures-to-other-land&quot;,&quot;dat_carbon-stock-mineral-soil_meadows-and-pastures-to-wetland&quot;],&quot;maxValues&quot;:[&quot;2050&quot;,1400948.5350041944,-770715.1677240462,-1270949.179304534,-212761.7611335836,0.0,0.0],&quot;hiddenColumns&quot;:[],&quot;filterIds&quot;:[null,null,null,null,null,null,null],&quot;numRows&quot;:61,&quot;possibleValues&quot;:[[&quot;1990&quot;,&quot;1991&quot;,&quot;1992&quot;,&quot;1993&quot;,&quot;1994&quot;,&quot;1995&quot;,&quot;1996&quot;,&quot;1997&quot;,&quot;1998&quot;,&quot;1999&quot;,&quot;2000&quot;,&quot;2001&quot;,&quot;2002&quot;,&quot;2003&quot;,&quot;2004&quot;,&quot;2005&quot;,&quot;2006&quot;,&quot;2007&quot;,&quot;2008&quot;,&quot;2009&quot;,&quot;2010&quot;,&quot;2011&quot;,&quot;2012&quot;,&quot;2013&quot;,&quot;2014&quot;,&quot;2015&quot;,&quot;2016&quot;,&quot;2017&quot;,&quot;2018&quot;,&quot;2019&quot;,&quot;2020&quot;,&quot;2021&quot;,&quot;2022&quot;,&quot;2023&quot;,&quot;2024&quot;,&quot;2025&quot;,&quot;2026&quot;,&quot;2027&quot;,&quot;2028&quot;,&quot;2029&quot;,&quot;2030&quot;,&quot;2031&quot;,&quot;2032&quot;,&quot;2033&quot;,&quot;2034&quot;,&quot;2035&quot;,&quot;2036&quot;,&quot;2037&quot;,&quot;2038&quot;,&quot;2039&quot;,&quot;2040&quot;,&quot;2041&quot;,&quot;2042&quot;,&quot;2043&quot;,&quot;2044&quot;,&quot;2045&quot;,&quot;2046&quot;,&quot;2047&quot;,&quot;2048&quot;,&quot;2049&quot;,&quot;2050&quot;],null,null,null,null,null,null],&quot;rowColorValues&quot;:[&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;],&quot;containsMissingValues&quot;:[false,false,false,false,false,false,false],&quot;knimeTypes&quot;:[&quot;String&quot;,&quot;Number (double)&quot;,&quot;Number (double)&quot;,&quot;Number (double)&quot;,&quot;Number (double)&quot;,&quot;Number (double)&quot;,&quot;Number (double)&quot;],&quot;colTypes&quot;:[&quot;string&quot;,&quot;number&quot;,&quot;number&quot;,&quot;number&quot;,&quot;number&quot;,&quot;number&quot;,&quot;number&quot;],&quot;colorModels&quot;:[],&quot;numColumns&quot;:7,&quot;extensionNames&quot;:[],&quot;extensionTypes&quot;:[],&quot;minValues&quot;:[&quot;1990&quot;,460147.50223382213,-1190302.6001125912,-3266602.6043470562,-502398.50061036507,0.0,0.0],&quot;rowSizeValues&quot;:null,&quot;numExtensions&quot;:0},&quot;dataHash&quot;:null,&quot;totalFilteredRows&quot;:0,&quot;fragmentFirstRowIndex&quot;:0,&quot;totalRows&quot;:0}"/>
</config>
