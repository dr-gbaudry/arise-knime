<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="viewRepresentation">
<entry key="jsCode" type="xstring" value="var body = document.getElementsByTagName(&quot;body&quot;)[0];%%00010var html = '&lt;script src=&quot;https://code.highcharts.com/highcharts.js&quot;&gt;&lt;/script&gt;';%%00010html += '&lt;script src=&quot;https://code.highcharts.com/modules/exporting.js&quot;&gt;&lt;/script&gt;';%%00010html += '&lt;script src=&quot;https://code.highcharts.com/modules/export-data.js&quot;&gt;&lt;/script&gt;';%%00010html += '&lt;div id=&quot;container&quot;&gt;&lt;/div&gt;';%%00010body.innerHTML = html;%%00010%%00010require.config({%%00010    packages: [{%%00010        name: 'highcharts',%%00010        main: 'highcharts'%%00010    }],%%00010    paths: {%%00010        // Change this to your server if you do not wish to use our CDN.%%00010        'highcharts': 'https://code.highcharts.com'%%00010    }%%00010});%%00010%%00010%%00010var data = knimeDataTable.getRows();%%00010// Extract Years column and x values%%00010var x_column_name = &quot;Years&quot;;%%00010var x_column = knimeDataTable.getColumnNames().indexOf(x_column_name);%%00010var x_values = knimeDataTable.getColumn(x_column);%%00010// Create dataset for values%%00010var dataset = [];%%00010%%00010for (var colID = 0; colID &lt; knimeDataTable.getNumColumns(); colID++) {%%00010  var colType = knimeDataTable.getColumnTypes()[colID];%%00010  var colName = knimeDataTable.getColumnNames()[colID];%%00010  //console.log('colomn name',colName)%%00010  if (colType === &quot;number&quot;) {%%00010    dataset.push({%%00010      name: colName,%%00010      //values: data.map(function(d) { // Data%%00010      //       return {x: d.data[x_column], y: d.data[colID]};%%00010      //       })%%00010      data: data.map(function(d) {%%00010        return [parseInt(d.data[x_column]),d.data[colID]];%%00010      })%%00010    });%%00010    console.log(dataset)%%00010  }%%00010}%%00010%%00010var chartData = {%%00010  series: dataset,%%00010  title: &quot;UK - mineral-soil, Forest land [tC]&quot;,%%00010  timeAxis: x_values,%%00010  unit: &quot;tC&quot;%%00010};%%00010%%00010//console.log('chartData', chartData)%%00010%%00010require(['highcharts/modules/exporting', 'highcharts/modules/export-data'], function({Highcharts}) {%%00010    %%00010    Highcharts.chart('container', {%%00010    chart: {%%00010      renderTo: ServiceWorkerContainer,%%00010      type: &quot;area&quot;,%%00010      spacingBottom: 30%%00010    },%%00010    title: {%%00010      text: chartData.title%%00010    },%%00010    //subtitle: {%%00010    //    text: 'Source: Wikipedia.org'%%00010    //},%%00010    xAxis: {%%00010        allowDecimals: false,%%00010        labels: {%%00010            formatter: function () {%%00010                return this.value; // clean, unformatted number for year%%00010            }%%00010        }%%00010    },%%00010    yAxis: {%%00010      title: {%%00010        text: chartData.unit%%00010      },%%00010      //labels: {%%00010       // formatter: function() {%%00010       //   return this.value / 1000 + 'k';%%00010       // }%%00010      //}%%00010    },%%00010    tooltip: {%%00010      split: true,%%00010      //pointFormat: '&lt;b&gt;{point.y:,.0f}&lt;/b&gt;&lt;br/&gt; in {point.x}',%%00010      pointFormat: '&lt;span style=&quot;color:{series.color}&quot;&gt;{series.name}&lt;/span&gt;: &lt;b&gt;{point.y:,.0f}&lt;/b&gt; ({point.percentage:.1f}%)&lt;br/&gt;',%%00010      valueDecimals: 2%%00010      //valueSuffix: &quot; millions&quot;%%00010    },%%00010    plotOptions: {%%00010      area: {%%00010        stacking: &quot;normal&quot;,%%00010        lineColor: &quot;#666666&quot;,%%00010        lineWidth: 1,%%00010        marker: {%%00010          lineWidth: 1,%%00010          lineColor: &quot;#666666&quot;,%%00010          enabled:false,%%00010          symbol:'circle',%%00010          radius:2%%00010        }%%00010      }%%00010    },%%00010    responsive: {%%00010      rules: [%%00010        {%%00010          condition: {%%00010            maxWidth: 500%%00010          }%%00010        }%%00010      ]%%00010    },%%00010    series: chartData.series%%00010  });%%00010});%%00010"/>
<entry key="jsSVGCode" type="xstring" value=""/>
<entry key="cssCode" type="xstring" value="body {%%00010    font-family: sans-serif;%%00010}%%00010h1 {%%00010    font-size: 1.5em;%%00010    font-weight: bold;%%00010}%%00010.success {%%00010    color: #006633;%%00010    font-weight: bold;%%00010}%%00010%%00010.failure {%%00010    color: #990000;%%00010    font-weight: bold;%%00010}%%00010%%00010#container {%%00010    min-width: 300px;%%00010    max-width: 1600px;%%00010    height: 500px;%%00010    margin: 1em auto;%%00010}%%00010"/>
<config key="jsDependencies">
<entry key="array-size" type="xint" value="0"/>
</config>
<config key="jsExports">
<entry key="array-size" type="xint" value="0"/>
</config>
<config key="cssDependencies">
<entry key="array-size" type="xint" value="0"/>
</config>
<entry key="knimeDataTableJSON" type="xstring" value="{&quot;@class&quot;:&quot;org.knime.js.core.JSONDataTable&quot;,&quot;id&quot;:&quot;d7f3fd01-baa7-4b07-bd75-005a01707d61&quot;,&quot;fragment&quot;:false,&quot;filtered&quot;:false,&quot;rows&quot;:[{&quot;data&quot;:[&quot;1990&quot;,428197.2486114995,-10427.14474002428,-10.974646672916155,-88.4829871403461,0.0,0.0],&quot;rowKey&quot;:&quot;Row0&quot;},{&quot;data&quot;:[&quot;1991&quot;,456834.7586841817,-10533.720559252055,-10.612900316454581,-92.30068796849264,0.0,0.0],&quot;rowKey&quot;:&quot;Row1&quot;},{&quot;data&quot;:[&quot;1992&quot;,486932.0410688902,-10633.923587208958,-10.268639118683161,-95.90148654235479,0.0,0.0],&quot;rowKey&quot;:&quot;Row2&quot;},{&quot;data&quot;:[&quot;1993&quot;,521512.87704436464,-10728.169852582296,-9.940976683359658,-99.29891270558572,0.0,0.0],&quot;rowKey&quot;:&quot;Row3&quot;},{&quot;data&quot;:[&quot;1994&quot;,559153.5623591152,-10816.795457401433,-9.629074121225623,-102.50558663493753,0.0,0.0],&quot;rowKey&quot;:&quot;Row4&quot;},{&quot;data&quot;:[&quot;1995&quot;,595897.8548347143,-10900.263683828493,-9.332135390788785,-105.5332381205835,0.0,0.0],&quot;rowKey&quot;:&quot;Row5&quot;},{&quot;data&quot;:[&quot;1996&quot;,621322.5056818798,-10978.862750668717,-9.049408007492287,-108.39284485323381,0.0,0.0],&quot;rowKey&quot;:&quot;Row6&quot;},{&quot;data&quot;:[&quot;1997&quot;,649868.2065457264,-11052.918136827073,-8.780178540344002,-111.09465175994644,0.0,0.0],&quot;rowKey&quot;:&quot;Row7&quot;},{&quot;data&quot;:[&quot;1998&quot;,674251.8725560386,-11122.730362511436,-8.523771106067718,-113.64823280244781,0.0,0.0],&quot;rowKey&quot;:&quot;Row8&quot;},{&quot;data&quot;:[&quot;1999&quot;,699406.7089892712,-11188.546018662002,-8.279545490355204,-116.06250964232547,0.0,0.0],&quot;rowKey&quot;:&quot;Row9&quot;},{&quot;data&quot;:[&quot;2000&quot;,722545.999235149,-16982.542749821485,-26.565333299580082,-5682.749117699935,0.0,0.0],&quot;rowKey&quot;:&quot;Row10&quot;},{&quot;data&quot;:[&quot;2001&quot;,753946.0791754492,-22445.462991335393,-43.80755278581451,-10923.579795767622,0.0,0.0],&quot;rowKey&quot;:&quot;Row11&quot;},{&quot;data&quot;:[&quot;2002&quot;,784202.6423538855,-27598.32972287407,-60.07141666746831,-15859.38030388107,0.0,0.0],&quot;rowKey&quot;:&quot;Row12&quot;},{&quot;data&quot;:[&quot;2003&quot;,814456.4032028308,-32460.137562945652,-75.41772625931175,-20509.561985181856,0.0,0.0],&quot;rowKey&quot;:&quot;Row13&quot;},{&quot;data&quot;:[&quot;2004&quot;,842531.0070884828,-37049.1542496249,-89.90317152700013,-24892.191535518414,0.0,0.0],&quot;rowKey&quot;:&quot;Row14&quot;},{&quot;data&quot;:[&quot;2005&quot;,867149.6665135553,-41382.49464521271,-103.58063528842303,-29024.09230743931,0.0,0.0],&quot;rowKey&quot;:&quot;Row15&quot;},{&quot;data&quot;:[&quot;2006&quot;,887836.9497108108,-45475.193068312874,-116.49948767011733,-32920.9830300053,0.0,0.0],&quot;rowKey&quot;:&quot;Row16&quot;},{&quot;data&quot;:[&quot;2007&quot;,907708.6470189545,-49342.52175673815,-128.70579465707644,-36597.4650219342,0.0,0.0],&quot;rowKey&quot;:&quot;Row17&quot;},{&quot;data&quot;:[&quot;2008&quot;,916550.3481403146,-52997.75291659378,-140.24259766805258,-40067.20450469239,0.0,0.0],&quot;rowKey&quot;:&quot;Row18&quot;},{&quot;data&quot;:[&quot;2009&quot;,929648.7857037052,-56454.074856193474,-151.1500929658815,-43342.92491557109,0.0,0.0],&quot;rowKey&quot;:&quot;Row19&quot;},{&quot;data&quot;:[&quot;2010&quot;,946531.0856469756,-59628.1947592393,-161.76885167945585,-46419.009047460684,0.0,0.0],&quot;rowKey&quot;:&quot;Row20&quot;},{&quot;data&quot;:[&quot;2011&quot;,979308.0768280297,-62629.13809107616,-171.80835651200212,-49326.433077998336,0.0,0.0],&quot;rowKey&quot;:&quot;Row21&quot;},{&quot;data&quot;:[&quot;2012&quot;,1024441.6419006577,-65466.868951178556,-181.3031336320845,-52075.35234487228,0.0,0.0],&quot;rowKey&quot;:&quot;Row22&quot;},{&quot;data&quot;:[&quot;2013&quot;,1030557.0781005018,-68151.7130465284,-190.2854568055176,-54675.191216680374,0.0,0.0],&quot;rowKey&quot;:&quot;Row23&quot;},{&quot;data&quot;:[&quot;2014&quot;,1039645.5041946254,-70692.15954745014,-198.7855421409643,-57134.844442060356,0.0,0.0],&quot;rowKey&quot;:&quot;Row24&quot;},{&quot;data&quot;:[&quot;2015&quot;,1053655.8825268866,-73097.13219949485,-206.8316535985802,-59462.554817801116,0.0,0.0],&quot;rowKey&quot;:&quot;Row25&quot;},{&quot;data&quot;:[&quot;2016&quot;,1066632.7048883892,-75373.93084257629,-214.45026938175496,-61666.13001882123,0.0,0.0],&quot;rowKey&quot;:&quot;Row26&quot;},{&quot;data&quot;:[&quot;2017&quot;,1079973.994706309,-77531.066917532,-221.66616599397005,-63752.75045134294,0.0,0.0],&quot;rowKey&quot;:&quot;Row27&quot;},{&quot;data&quot;:[&quot;2018&quot;,1150397.6509786407,-77866.08170307512,-231.45133600760283,-63303.93630379885,0.0,0.0],&quot;rowKey&quot;:&quot;Row28&quot;},{&quot;data&quot;:[&quot;2019&quot;,1176546.8958106001,-78279.07448207044,-248.92494314195477,-62732.84261124829,0.0,0.0],&quot;rowKey&quot;:&quot;Row29&quot;},{&quot;data&quot;:[&quot;2020&quot;,1202991.339707227,-78587.60205946541,-266.45099840323877,-62167.20309699939,0.0,0.0],&quot;rowKey&quot;:&quot;Row30&quot;},{&quot;data&quot;:[&quot;2021&quot;,1229721.724460629,-78896.12963686038,-284.01595100695664,-61601.953112299045,0.0,0.0],&quot;rowKey&quot;:&quot;Row31&quot;},{&quot;data&quot;:[&quot;2022&quot;,1240729.8099731163,-79204.65721425525,-303.05974784812463,-61177.11735015311,0.0,0.0],&quot;rowKey&quot;:&quot;Row32&quot;},{&quot;data&quot;:[&quot;2023&quot;,1252191.955004491,-79513.18479165022,-322.3131148815196,-60748.00153763821,0.0,0.0],&quot;rowKey&quot;:&quot;Row33&quot;},{&quot;data&quot;:[&quot;2024&quot;,1264147.2903318082,-79821.71236904518,-341.76333528854576,-60314.35554826051,0.0,0.0],&quot;rowKey&quot;:&quot;Row34&quot;},{&quot;data&quot;:[&quot;2025&quot;,1276646.64677689,-80130.23994644014,-361.3937524060546,-59875.92920889133,0.0,0.0],&quot;rowKey&quot;:&quot;Row35&quot;},{&quot;data&quot;:[&quot;2026&quot;,1289793.1584216447,-80438.76752383511,-381.1769181237266,-59432.22053435329,0.0,0.0],&quot;rowKey&quot;:&quot;Row36&quot;},{&quot;data&quot;:[&quot;2027&quot;,1303795.0943749961,-80747.29510123008,-401.06276689047843,-58982.226071892575,0.0,0.0],&quot;rowKey&quot;:&quot;Row37&quot;},{&quot;data&quot;:[&quot;2028&quot;,1319071.2661947126,-81055.82267862505,-420.95402072255877,-58523.946765735,0.0,0.0],&quot;rowKey&quot;:&quot;Row38&quot;},{&quot;data&quot;:[&quot;2029&quot;,1336459.1663803842,-81364.35025602,-440.6556076289372,-58053.4182553136,0.0,0.0],&quot;rowKey&quot;:&quot;Row39&quot;},{&quot;data&quot;:[&quot;2030&quot;,1357617.4759832583,-81672.87783341497,-459.77280293225874,-57562.840636383764,0.0,0.0],&quot;rowKey&quot;:&quot;Row40&quot;},{&quot;data&quot;:[&quot;2031&quot;,1385771.59519425,-81981.40541080994,-477.51446038536506,-57037.10181541006,0.0,0.0],&quot;rowKey&quot;:&quot;Row41&quot;},{&quot;data&quot;:[&quot;2032&quot;,1426970.5731817656,-82289.93298820489,-492.3442710415522,-56447.842114907544,0.0,0.0],&quot;rowKey&quot;:&quot;Row42&quot;},{&quot;data&quot;:[&quot;2033&quot;,1491751.019597336,-82598.46056559977,-501.47504501688906,-55745.5121383401,0.0,0.0],&quot;rowKey&quot;:&quot;Row43&quot;},{&quot;data&quot;:[&quot;2034&quot;,1595592.0666844365,-82906.98814299474,-500.5405929230844,-54858.53398485534,0.0,0.0],&quot;rowKey&quot;:&quot;Row44&quot;},{&quot;data&quot;:[&quot;2035&quot;,1734208.7829667928,-83215.51572038971,-490.89434410992453,-53749.305807652294,0.0,0.0],&quot;rowKey&quot;:&quot;Row45&quot;},{&quot;data&quot;:[&quot;2036&quot;,1841313.4700902882,-83524.04329778466,-485.2320917819988,-52892.07478402674,0.0,0.0],&quot;rowKey&quot;:&quot;Row46&quot;},{&quot;data&quot;:[&quot;2037&quot;,1897430.7531943808,-83832.57087517963,-490.698346496034,-52320.27124020995,0.0,0.0],&quot;rowKey&quot;:&quot;Row47&quot;},{&quot;data&quot;:[&quot;2038&quot;,1933775.823670626,-84141.0984525746,-501.55273058245723,-51817.881004295516,0.0,0.0],&quot;rowKey&quot;:&quot;Row48&quot;},{&quot;data&quot;:[&quot;2039&quot;,1961788.0508012716,-84449.62602996956,-515.1244010506877,-51329.89543303817,0.0,0.0],&quot;rowKey&quot;:&quot;Row49&quot;},{&quot;data&quot;:[&quot;2040&quot;,1986125.4439476312,-84758.15360736453,-530.1015574164342,-50842.65488877568,0.0,0.0],&quot;rowKey&quot;:&quot;Row50&quot;},{&quot;data&quot;:[&quot;2041&quot;,2008850.4689746539,-85066.6811847595,-545.8198184845236,-50352.92192445333,0.0,0.0],&quot;rowKey&quot;:&quot;Row51&quot;},{&quot;data&quot;:[&quot;2042&quot;,2030929.086552111,-85375.20876215445,-561.9365831387887,-49860.0051745892,0.0,0.0],&quot;rowKey&quot;:&quot;Row52&quot;},{&quot;data&quot;:[&quot;2043&quot;,2052828.6470771525,-85683.73633954942,-578.2728750761463,-49363.80085117723,0.0,0.0],&quot;rowKey&quot;:&quot;Row53&quot;},{&quot;data&quot;:[&quot;2044&quot;,2074778.9952692008,-85992.2639169443,-594.7338792726435,-48864.32264193248,0.0,0.0],&quot;rowKey&quot;:&quot;Row54&quot;},{&quot;data&quot;:[&quot;2045&quot;,2096893.8459036916,-86300.79149433927,-611.2683015062389,-48361.59689869182,0.0,0.0],&quot;rowKey&quot;:&quot;Row55&quot;},{&quot;data&quot;:[&quot;2046&quot;,2119229.3440133734,-86609.31907173422,-627.8474043794029,-47855.64377972623,0.0,0.0],&quot;rowKey&quot;:&quot;Row56&quot;},{&quot;data&quot;:[&quot;2047&quot;,2141812.8941032034,-86917.84664912919,-644.4541530732103,-47346.476680032734,0.0,0.0],&quot;rowKey&quot;:&quot;Row57&quot;},{&quot;data&quot;:[&quot;2048&quot;,2164657.499620528,-87226.37422652416,-661.0775886887268,-46834.10441355894,0.0,0.0],&quot;rowKey&quot;:&quot;Row58&quot;},{&quot;data&quot;:[&quot;2049&quot;,2187768.931010513,-87534.90180391911,-677.7099117203255,-46318.533058247485,0.0,0.0],&quot;rowKey&quot;:&quot;Row59&quot;},{&quot;data&quot;:[&quot;2050&quot;,2211152.9699332616,-87843.42938131408,-694.3429103943389,-45799.77049293928,0.0,0.0],&quot;rowKey&quot;:&quot;Row60&quot;}],&quot;spec&quot;:{&quot;@class&quot;:&quot;org.knime.js.core.JSONDataTableSpec&quot;,&quot;colNames&quot;:[&quot;Years&quot;,&quot;dat_carbon-stock-mineral-soil_forest-land-remaining-forest-land&quot;,&quot;dat_carbon-stock-mineral-soil_forest-land-to-artificial-land&quot;,&quot;dat_carbon-stock-mineral-soil_forest-land-to-cropland&quot;,&quot;dat_carbon-stock-mineral-soil_forest-land-to-meadows-and-pastures&quot;,&quot;dat_carbon-stock-mineral-soil_forest-land-to-other-land&quot;,&quot;dat_carbon-stock-mineral-soil_forest-land-to-wetland&quot;],&quot;maxValues&quot;:[&quot;2050&quot;,2211152.9699332616,-10427.14474002428,-8.279545490355204,-88.4829871403461,0.0,0.0],&quot;hiddenColumns&quot;:[],&quot;filterIds&quot;:[null,null,null,null,null,null,null],&quot;numRows&quot;:61,&quot;possibleValues&quot;:[[&quot;1990&quot;,&quot;1991&quot;,&quot;1992&quot;,&quot;1993&quot;,&quot;1994&quot;,&quot;1995&quot;,&quot;1996&quot;,&quot;1997&quot;,&quot;1998&quot;,&quot;1999&quot;,&quot;2000&quot;,&quot;2001&quot;,&quot;2002&quot;,&quot;2003&quot;,&quot;2004&quot;,&quot;2005&quot;,&quot;2006&quot;,&quot;2007&quot;,&quot;2008&quot;,&quot;2009&quot;,&quot;2010&quot;,&quot;2011&quot;,&quot;2012&quot;,&quot;2013&quot;,&quot;2014&quot;,&quot;2015&quot;,&quot;2016&quot;,&quot;2017&quot;,&quot;2018&quot;,&quot;2019&quot;,&quot;2020&quot;,&quot;2021&quot;,&quot;2022&quot;,&quot;2023&quot;,&quot;2024&quot;,&quot;2025&quot;,&quot;2026&quot;,&quot;2027&quot;,&quot;2028&quot;,&quot;2029&quot;,&quot;2030&quot;,&quot;2031&quot;,&quot;2032&quot;,&quot;2033&quot;,&quot;2034&quot;,&quot;2035&quot;,&quot;2036&quot;,&quot;2037&quot;,&quot;2038&quot;,&quot;2039&quot;,&quot;2040&quot;,&quot;2041&quot;,&quot;2042&quot;,&quot;2043&quot;,&quot;2044&quot;,&quot;2045&quot;,&quot;2046&quot;,&quot;2047&quot;,&quot;2048&quot;,&quot;2049&quot;,&quot;2050&quot;],null,null,null,null,null,null],&quot;rowColorValues&quot;:[&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;],&quot;containsMissingValues&quot;:[false,false,false,false,false,false,false],&quot;knimeTypes&quot;:[&quot;String&quot;,&quot;Number (double)&quot;,&quot;Number (double)&quot;,&quot;Number (double)&quot;,&quot;Number (double)&quot;,&quot;Number (double)&quot;,&quot;Number (double)&quot;],&quot;colTypes&quot;:[&quot;string&quot;,&quot;number&quot;,&quot;number&quot;,&quot;number&quot;,&quot;number&quot;,&quot;number&quot;,&quot;number&quot;],&quot;colorModels&quot;:[],&quot;numColumns&quot;:7,&quot;extensionNames&quot;:[],&quot;extensionTypes&quot;:[],&quot;minValues&quot;:[&quot;1990&quot;,428197.2486114995,-87843.42938131408,-694.3429103943389,-63752.75045134294,0.0,0.0],&quot;rowSizeValues&quot;:null,&quot;numExtensions&quot;:0},&quot;dataHash&quot;:null,&quot;totalFilteredRows&quot;:0,&quot;fragmentFirstRowIndex&quot;:0,&quot;totalRows&quot;:0}"/>
</config>
