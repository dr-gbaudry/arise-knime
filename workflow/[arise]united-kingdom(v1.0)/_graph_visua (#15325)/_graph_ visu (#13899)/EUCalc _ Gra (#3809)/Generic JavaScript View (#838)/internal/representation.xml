<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="viewRepresentation">
<entry key="jsCode" type="xstring" value="var body = document.getElementsByTagName(&quot;body&quot;)[0];%%00010var html = '&lt;script src=&quot;https://code.highcharts.com/highcharts.js&quot;&gt;&lt;/script&gt;';%%00010html += '&lt;script src=&quot;https://code.highcharts.com/modules/exporting.js&quot;&gt;&lt;/script&gt;';%%00010html += '&lt;script src=&quot;https://code.highcharts.com/modules/export-data.js&quot;&gt;&lt;/script&gt;';%%00010html += '&lt;div id=&quot;container&quot;&gt;&lt;/div&gt;';%%00010body.innerHTML = html;%%00010%%00010require.config({%%00010    packages: [{%%00010        name: 'highcharts',%%00010        main: 'highcharts'%%00010    }],%%00010    paths: {%%00010        // Change this to your server if you do not wish to use our CDN.%%00010        'highcharts': 'https://code.highcharts.com'%%00010    }%%00010});%%00010%%00010%%00010var data = knimeDataTable.getRows();%%00010// Extract Years column and x values%%00010var x_column_name = &quot;Years&quot;;%%00010var x_column = knimeDataTable.getColumnNames().indexOf(x_column_name);%%00010var x_values = knimeDataTable.getColumn(x_column);%%00010// Create dataset for values%%00010var dataset = [];%%00010%%00010for (var colID = 0; colID &lt; knimeDataTable.getNumColumns(); colID++) {%%00010  var colType = knimeDataTable.getColumnTypes()[colID];%%00010  var colName = knimeDataTable.getColumnNames()[colID];%%00010  //console.log('colomn name',colName)%%00010  if (colType === &quot;number&quot;) {%%00010    dataset.push({%%00010      name: colName,%%00010      //values: data.map(function(d) { // Data%%00010      //       return {x: d.data[x_column], y: d.data[colID]};%%00010      //       })%%00010      data: data.map(function(d) {%%00010        return [parseInt(d.data[x_column]),d.data[colID]];%%00010      })%%00010    });%%00010    console.log(dataset)%%00010  }%%00010}%%00010%%00010var chartData = {%%00010  series: dataset,%%00010  title: &quot;UK - mineral-soil, Artificial land [tC]&quot;,%%00010  timeAxis: x_values,%%00010  unit: &quot;tC&quot;%%00010};%%00010%%00010//console.log('chartData', chartData)%%00010%%00010require(['highcharts/modules/exporting', 'highcharts/modules/export-data'], function({Highcharts}) {%%00010    %%00010    Highcharts.chart('container', {%%00010    chart: {%%00010      renderTo: ServiceWorkerContainer,%%00010      type: &quot;area&quot;,%%00010      spacingBottom: 30%%00010    },%%00010    title: {%%00010      text: chartData.title%%00010    },%%00010    //subtitle: {%%00010    //    text: 'Source: Wikipedia.org'%%00010    //},%%00010    xAxis: {%%00010        allowDecimals: false,%%00010        labels: {%%00010            formatter: function () {%%00010                return this.value; // clean, unformatted number for year%%00010            }%%00010        }%%00010    },%%00010    yAxis: {%%00010      title: {%%00010        text: chartData.unit%%00010      },%%00010      //labels: {%%00010       // formatter: function() {%%00010       //   return this.value / 1000 + 'k';%%00010       // }%%00010      //}%%00010    },%%00010    tooltip: {%%00010      split: true,%%00010      //pointFormat: '&lt;b&gt;{point.y:,.0f}&lt;/b&gt;&lt;br/&gt; in {point.x}',%%00010      pointFormat: '&lt;span style=&quot;color:{series.color}&quot;&gt;{series.name}&lt;/span&gt;: &lt;b&gt;{point.y:,.0f}&lt;/b&gt; ({point.percentage:.1f}%)&lt;br/&gt;',%%00010      valueDecimals: 2%%00010      //valueSuffix: &quot; millions&quot;%%00010    },%%00010    plotOptions: {%%00010      area: {%%00010        stacking: &quot;normal&quot;,%%00010        lineColor: &quot;#666666&quot;,%%00010        lineWidth: 1,%%00010        marker: {%%00010          lineWidth: 1,%%00010          lineColor: &quot;#666666&quot;,%%00010          enabled:false,%%00010          symbol:'circle',%%00010          radius:2%%00010        }%%00010      }%%00010    },%%00010    responsive: {%%00010      rules: [%%00010        {%%00010          condition: {%%00010            maxWidth: 500%%00010          }%%00010        }%%00010      ]%%00010    },%%00010    series: chartData.series%%00010  });%%00010});%%00010"/>
<entry key="jsSVGCode" type="xstring" value=""/>
<entry key="cssCode" type="xstring" value="body {%%00010    font-family: sans-serif;%%00010}%%00010h1 {%%00010    font-size: 1.5em;%%00010    font-weight: bold;%%00010}%%00010.success {%%00010    color: #006633;%%00010    font-weight: bold;%%00010}%%00010%%00010.failure {%%00010    color: #990000;%%00010    font-weight: bold;%%00010}%%00010%%00010#container {%%00010    min-width: 300px;%%00010    max-width: 1600px;%%00010    height: 500px;%%00010    margin: 1em auto;%%00010}%%00010"/>
<config key="jsDependencies">
<entry key="array-size" type="xint" value="0"/>
</config>
<config key="jsExports">
<entry key="array-size" type="xint" value="0"/>
</config>
<config key="cssDependencies">
<entry key="array-size" type="xint" value="0"/>
</config>
<entry key="knimeDataTableJSON" type="xstring" value="{&quot;@class&quot;:&quot;org.knime.js.core.JSONDataTable&quot;,&quot;id&quot;:&quot;371966f3-5d4f-484e-a5ff-269f6441d4f9&quot;,&quot;fragment&quot;:false,&quot;filtered&quot;:false,&quot;rows&quot;:[{&quot;data&quot;:[&quot;1990&quot;,-444332.1793136148,29989.12163441927,-11170.246555500062,162454.08209597945,0.0,0.0],&quot;rowKey&quot;:&quot;Row0&quot;},{&quot;data&quot;:[&quot;1991&quot;,-455942.4390864267,28884.13632371754,-12571.982034515564,165877.51285150438,0.0,0.0],&quot;rowKey&quot;:&quot;Row1&quot;},{&quot;data&quot;:[&quot;1992&quot;,-467006.42493016593,27805.453849866266,-13086.403680976815,169180.80678223437,0.0,0.0],&quot;rowKey&quot;:&quot;Row2&quot;},{&quot;data&quot;:[&quot;1993&quot;,-477549.4761608148,26752.287738874707,-13821.214593607716,172367.91735551044,0.0,0.0],&quot;rowKey&quot;:&quot;Row3&quot;},{&quot;data&quot;:[&quot;1994&quot;,-487602.19879529835,25723.761752687256,-14766.033379313882,175441.845776944,0.0,0.0],&quot;rowKey&quot;:&quot;Row4&quot;},{&quot;data&quot;:[&quot;1995&quot;,-497187.2219824712,24719.40057215053,-15535.127920405972,178407.96200660567,0.0,0.0],&quot;rowKey&quot;:&quot;Row5&quot;},{&quot;data&quot;:[&quot;1996&quot;,-506328.50146385905,23738.386331200996,-15847.14442111128,181269.09840665202,0.0,0.0],&quot;rowKey&quot;:&quot;Row6&quot;},{&quot;data&quot;:[&quot;1997&quot;,-515048.60314610566,22780.071468759674,-16417.186815875044,184028.9491670666,0.0,0.0],&quot;rowKey&quot;:&quot;Row7&quot;},{&quot;data&quot;:[&quot;1998&quot;,-523367.3370970255,21843.820353337815,-17105.3576087353,186691.04395180295,0.0,0.0],&quot;rowKey&quot;:&quot;Row8&quot;},{&quot;data&quot;:[&quot;1999&quot;,-531302.5405129859,20928.953017753,-17803.591673283754,189258.2320511013,0.0,0.0],&quot;rowKey&quot;:&quot;Row9&quot;},{&quot;data&quot;:[&quot;2000&quot;,-545721.5902901993,19741.695924670446,-18638.057255207455,193242.25090107834,0.0,0.0],&quot;rowKey&quot;:&quot;Row10&quot;},{&quot;data&quot;:[&quot;2001&quot;,-559428.5401985553,18581.291086715006,-20465.44087509357,197117.9823465192,0.0,0.0],&quot;rowKey&quot;:&quot;Row11&quot;},{&quot;data&quot;:[&quot;2002&quot;,-572453.1738481327,17447.117450563568,-22232.024214518864,200890.4647869938,0.0,0.0],&quot;rowKey&quot;:&quot;Row12&quot;},{&quot;data&quot;:[&quot;2003&quot;,-584836.2995015179,16338.160776498256,-23677.094676698027,204559.94485678364,0.0,0.0],&quot;rowKey&quot;:&quot;Row13&quot;},{&quot;data&quot;:[&quot;2004&quot;,-596615.7838333291,15253.864609378015,-24971.329886639047,208131.32028353625,0.0,0.0],&quot;rowKey&quot;:&quot;Row14&quot;},{&quot;data&quot;:[&quot;2005&quot;,-607813.805617806,14193.627135360604,-26224.177967830186,211609.0388327228,0.0,0.0],&quot;rowKey&quot;:&quot;Row15&quot;},{&quot;data&quot;:[&quot;2006&quot;,-618469.5133000098,13156.538840867588,-27199.31830219877,214992.56520144158,0.0,0.0],&quot;rowKey&quot;:&quot;Row16&quot;},{&quot;data&quot;:[&quot;2007&quot;,-628606.1046051831,12142.163847559757,-28001.3893017926,218287.92954512162,0.0,0.0],&quot;rowKey&quot;:&quot;Row17&quot;},{&quot;data&quot;:[&quot;2008&quot;,-638255.5562510927,11149.76290562835,-28473.440033013278,221496.0182425532,0.0,0.0],&quot;rowKey&quot;:&quot;Row18&quot;},{&quot;data&quot;:[&quot;2009&quot;,-647437.6534728635,10178.822898661057,-28653.19036114778,224621.28987733627,0.0,0.0],&quot;rowKey&quot;:&quot;Row19&quot;},{&quot;data&quot;:[&quot;2010&quot;,-642457.8919887423,9405.613667166353,-29238.851507999552,230026.4902693863,0.0,0.0],&quot;rowKey&quot;:&quot;Row20&quot;},{&quot;data&quot;:[&quot;2011&quot;,-637780.9960322935,8650.37988862207,-30250.176919230376,235319.35320736578,0.0,0.0],&quot;rowKey&quot;:&quot;Row21&quot;},{&quot;data&quot;:[&quot;2012&quot;,-633392.7838224943,7912.54725797998,-30967.652189634264,240501.3803385839,0.0,0.0],&quot;rowKey&quot;:&quot;Row22&quot;},{&quot;data&quot;:[&quot;2013&quot;,-629268.7546612779,7191.697299757819,-31177.153648079893,245577.8667470285,0.0,0.0],&quot;rowKey&quot;:&quot;Row23&quot;},{&quot;data&quot;:[&quot;2014&quot;,-625395.4175283212,6487.281264231483,-30822.609508147783,250549.58120488533,0.0,0.0],&quot;rowKey&quot;:&quot;Row24&quot;},{&quot;data&quot;:[&quot;2015&quot;,-621751.040430453,5798.879690445667,-30138.192929144396,255420.91114717905,0.0,0.0],&quot;rowKey&quot;:&quot;Row25&quot;},{&quot;data&quot;:[&quot;2016&quot;,-618329.4982718816,5125.993689549008,-29200.760632479563,260192.3500317196,0.0,0.0],&quot;rowKey&quot;:&quot;Row26&quot;},{&quot;data&quot;:[&quot;2017&quot;,-615109.5279785679,4468.265955481319,-28484.627869451917,264870.2805041109,0.0,0.0],&quot;rowKey&quot;:&quot;Row27&quot;},{&quot;data&quot;:[&quot;2018&quot;,-618381.8339788952,4487.573508186836,-28651.297140728493,266014.7953901787,0.0,0.0],&quot;rowKey&quot;:&quot;Row28&quot;},{&quot;data&quot;:[&quot;2019&quot;,-620828.9860430587,4511.375084091979,-28847.07759013752,267425.7073970393,0.0,0.0],&quot;rowKey&quot;:&quot;Row29&quot;},{&quot;data&quot;:[&quot;2020&quot;,-623276.215638228,4529.156127552498,-29004.76483574654,268479.7337276041,0.0,0.0],&quot;rowKey&quot;:&quot;Row30&quot;},{&quot;data&quot;:[&quot;2021&quot;,-625723.5227644023,4546.937171013017,-29162.797482227248,269533.76005816885,0.0,0.0],&quot;rowKey&quot;:&quot;Row31&quot;},{&quot;data&quot;:[&quot;2022&quot;,-628170.9074215832,4564.718214473532,-29321.175529579596,270587.78638873337,0.0,0.0],&quot;rowKey&quot;:&quot;Row32&quot;},{&quot;data&quot;:[&quot;2023&quot;,-630618.3696097697,4582.499257934051,-29479.898977803656,271641.8127192981,0.0,0.0],&quot;rowKey&quot;:&quot;Row33&quot;},{&quot;data&quot;:[&quot;2024&quot;,-633065.909328962,4600.2803013945695,-29638.967826899392,272695.8390498629,0.0,0.0],&quot;rowKey&quot;:&quot;Row34&quot;},{&quot;data&quot;:[&quot;2025&quot;,-635513.52657916,4618.061344855089,-29798.382076866812,273749.8653804277,0.0,0.0],&quot;rowKey&quot;:&quot;Row35&quot;},{&quot;data&quot;:[&quot;2026&quot;,-637961.2213603638,4635.842388315608,-29958.141727705904,274803.89171099244,0.0,0.0],&quot;rowKey&quot;:&quot;Row36&quot;},{&quot;data&quot;:[&quot;2027&quot;,-640408.9936725734,4653.623431776127,-30118.246779416677,275857.9180415572,0.0,0.0],&quot;rowKey&quot;:&quot;Row37&quot;},{&quot;data&quot;:[&quot;2028&quot;,-642856.8435157886,4671.404475236646,-30278.69723199913,276911.944372122,0.0,0.0],&quot;rowKey&quot;:&quot;Row38&quot;},{&quot;data&quot;:[&quot;2029&quot;,-645304.7708900096,4689.185518697165,-30439.493085453254,277965.97070268675,0.0,0.0],&quot;rowKey&quot;:&quot;Row39&quot;},{&quot;data&quot;:[&quot;2030&quot;,-647752.7757952363,4706.966562157684,-30600.634339779066,279019.9970332515,0.0,0.0],&quot;rowKey&quot;:&quot;Row40&quot;},{&quot;data&quot;:[&quot;2031&quot;,-650200.8582314688,4724.747605618203,-30762.12099497655,280074.02336381626,0.0,0.0],&quot;rowKey&quot;:&quot;Row41&quot;},{&quot;data&quot;:[&quot;2032&quot;,-652649.0181987064,4742.528649078722,-30923.953051045715,281128.0496943811,0.0,0.0],&quot;rowKey&quot;:&quot;Row42&quot;},{&quot;data&quot;:[&quot;2033&quot;,-655097.2556969505,4760.309692539236,-31086.130507986534,282182.0760249456,0.0,0.0],&quot;rowKey&quot;:&quot;Row43&quot;},{&quot;data&quot;:[&quot;2034&quot;,-657545.5707262001,4778.090735999755,-31248.653365799055,283236.10235551035,0.0,0.0],&quot;rowKey&quot;:&quot;Row44&quot;},{&quot;data&quot;:[&quot;2035&quot;,-659993.9632864556,4795.871779460274,-31411.52162448326,284290.1286860751,0.0,0.0],&quot;rowKey&quot;:&quot;Row45&quot;},{&quot;data&quot;:[&quot;2036&quot;,-662442.4333777168,4813.652822920793,-31574.735284039136,285344.1550166399,0.0,0.0],&quot;rowKey&quot;:&quot;Row46&quot;},{&quot;data&quot;:[&quot;2037&quot;,-664890.9809999837,4831.433866381312,-31738.2943444667,286398.18134720466,0.0,0.0],&quot;rowKey&quot;:&quot;Row47&quot;},{&quot;data&quot;:[&quot;2038&quot;,-667339.6061532565,4849.214909841831,-31902.198805765933,287452.2076777694,0.0,0.0],&quot;rowKey&quot;:&quot;Row48&quot;},{&quot;data&quot;:[&quot;2039&quot;,-669788.308837535,4866.99595330235,-32066.44866793685,288506.23400833417,0.0,0.0],&quot;rowKey&quot;:&quot;Row49&quot;},{&quot;data&quot;:[&quot;2040&quot;,-672237.0890528192,4884.776996762869,-32231.043930979446,289560.260338899,0.0,0.0],&quot;rowKey&quot;:&quot;Row50&quot;},{&quot;data&quot;:[&quot;2041&quot;,-674685.9467991091,4902.558040223388,-32395.984594893718,290614.28666946373,0.0,0.0],&quot;rowKey&quot;:&quot;Row51&quot;},{&quot;data&quot;:[&quot;2042&quot;,-677134.8820764048,4920.339083683907,-32561.27065967967,291668.3130000285,0.0,0.0],&quot;rowKey&quot;:&quot;Row52&quot;},{&quot;data&quot;:[&quot;2043&quot;,-679583.8948847057,4938.120127144426,-32726.9021253373,292722.3393305933,0.0,0.0],&quot;rowKey&quot;:&quot;Row53&quot;},{&quot;data&quot;:[&quot;2044&quot;,-682032.9852240129,4955.901170604941,-32892.87899186657,293776.36566115776,0.0,0.0],&quot;rowKey&quot;:&quot;Row54&quot;},{&quot;data&quot;:[&quot;2045&quot;,-684482.1530943258,4973.68221406546,-33059.20125926756,294830.3919917225,0.0,0.0],&quot;rowKey&quot;:&quot;Row55&quot;},{&quot;data&quot;:[&quot;2046&quot;,-686931.3984956444,4991.463257525979,-33225.86892754023,295884.41832228727,0.0,0.0],&quot;rowKey&quot;:&quot;Row56&quot;},{&quot;data&quot;:[&quot;2047&quot;,-689380.7214279689,5009.244300986498,-33392.88199668458,296938.444652852,0.0,0.0],&quot;rowKey&quot;:&quot;Row57&quot;},{&quot;data&quot;:[&quot;2048&quot;,-691830.1218912991,5027.025344447017,-33560.240466700605,297992.47098341683,0.0,0.0],&quot;rowKey&quot;:&quot;Row58&quot;},{&quot;data&quot;:[&quot;2049&quot;,-694279.5998856351,5044.806387907536,-33727.944337588306,299046.4973139816,0.0,0.0],&quot;rowKey&quot;:&quot;Row59&quot;},{&quot;data&quot;:[&quot;2050&quot;,-696729.1554109767,5062.587431368055,-33895.99360934768,300100.52364454634,0.0,0.0],&quot;rowKey&quot;:&quot;Row60&quot;}],&quot;spec&quot;:{&quot;@class&quot;:&quot;org.knime.js.core.JSONDataTableSpec&quot;,&quot;colNames&quot;:[&quot;Years&quot;,&quot;dat_carbon-stock-mineral-soil_artificial-land-remaining-artificial-land&quot;,&quot;dat_carbon-stock-mineral-soil_artificial-land-to-cropland&quot;,&quot;dat_carbon-stock-mineral-soil_artificial-land-to-forest-land&quot;,&quot;dat_carbon-stock-mineral-soil_artificial-land-to-meadows-and-pastures&quot;,&quot;dat_carbon-stock-mineral-soil_artificial-land-to-other-land&quot;,&quot;dat_carbon-stock-mineral-soil_artificial-land-to-wetland&quot;],&quot;maxValues&quot;:[&quot;2050&quot;,-444332.1793136148,29989.12163441927,-11170.246555500062,300100.52364454634,0.0,0.0],&quot;hiddenColumns&quot;:[],&quot;filterIds&quot;:[null,null,null,null,null,null,null],&quot;numRows&quot;:61,&quot;possibleValues&quot;:[[&quot;1990&quot;,&quot;1991&quot;,&quot;1992&quot;,&quot;1993&quot;,&quot;1994&quot;,&quot;1995&quot;,&quot;1996&quot;,&quot;1997&quot;,&quot;1998&quot;,&quot;1999&quot;,&quot;2000&quot;,&quot;2001&quot;,&quot;2002&quot;,&quot;2003&quot;,&quot;2004&quot;,&quot;2005&quot;,&quot;2006&quot;,&quot;2007&quot;,&quot;2008&quot;,&quot;2009&quot;,&quot;2010&quot;,&quot;2011&quot;,&quot;2012&quot;,&quot;2013&quot;,&quot;2014&quot;,&quot;2015&quot;,&quot;2016&quot;,&quot;2017&quot;,&quot;2018&quot;,&quot;2019&quot;,&quot;2020&quot;,&quot;2021&quot;,&quot;2022&quot;,&quot;2023&quot;,&quot;2024&quot;,&quot;2025&quot;,&quot;2026&quot;,&quot;2027&quot;,&quot;2028&quot;,&quot;2029&quot;,&quot;2030&quot;,&quot;2031&quot;,&quot;2032&quot;,&quot;2033&quot;,&quot;2034&quot;,&quot;2035&quot;,&quot;2036&quot;,&quot;2037&quot;,&quot;2038&quot;,&quot;2039&quot;,&quot;2040&quot;,&quot;2041&quot;,&quot;2042&quot;,&quot;2043&quot;,&quot;2044&quot;,&quot;2045&quot;,&quot;2046&quot;,&quot;2047&quot;,&quot;2048&quot;,&quot;2049&quot;,&quot;2050&quot;],null,null,null,null,null,null],&quot;rowColorValues&quot;:[&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;],&quot;containsMissingValues&quot;:[false,false,false,false,false,false,false],&quot;knimeTypes&quot;:[&quot;String&quot;,&quot;Number (double)&quot;,&quot;Number (double)&quot;,&quot;Number (double)&quot;,&quot;Number (double)&quot;,&quot;Number (double)&quot;,&quot;Number (double)&quot;],&quot;colTypes&quot;:[&quot;string&quot;,&quot;number&quot;,&quot;number&quot;,&quot;number&quot;,&quot;number&quot;,&quot;number&quot;,&quot;number&quot;],&quot;colorModels&quot;:[],&quot;numColumns&quot;:7,&quot;extensionNames&quot;:[],&quot;extensionTypes&quot;:[],&quot;minValues&quot;:[&quot;1990&quot;,-696729.1554109767,4468.265955481319,-33895.99360934768,162454.08209597945,0.0,0.0],&quot;rowSizeValues&quot;:null,&quot;numExtensions&quot;:0},&quot;dataHash&quot;:null,&quot;totalFilteredRows&quot;:0,&quot;fragmentFirstRowIndex&quot;:0,&quot;totalRows&quot;:0}"/>
</config>
