<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="viewRepresentation">
<entry key="jsCode" type="xstring" value="var body = document.getElementsByTagName(&quot;body&quot;)[0];%%00010var html = '&lt;script src=&quot;https://code.highcharts.com/highcharts.js&quot;&gt;&lt;/script&gt;';%%00010html += '&lt;script src=&quot;https://code.highcharts.com/modules/exporting.js&quot;&gt;&lt;/script&gt;';%%00010html += '&lt;script src=&quot;https://code.highcharts.com/modules/export-data.js&quot;&gt;&lt;/script&gt;';%%00010html += '&lt;div id=&quot;container&quot;&gt;&lt;/div&gt;';%%00010body.innerHTML = html;%%00010%%00010require.config({%%00010    packages: [{%%00010        name: 'highcharts',%%00010        main: 'highcharts'%%00010    }],%%00010    paths: {%%00010        // Change this to your server if you do not wish to use our CDN.%%00010        'highcharts': 'https://code.highcharts.com'%%00010    }%%00010});%%00010%%00010%%00010var data = knimeDataTable.getRows();%%00010// Extract Years column and x values%%00010var x_column_name = &quot;Years&quot;;%%00010var x_column = knimeDataTable.getColumnNames().indexOf(x_column_name);%%00010var x_values = knimeDataTable.getColumn(x_column);%%00010// Create dataset for values%%00010var dataset = [];%%00010%%00010for (var colID = 0; colID &lt; knimeDataTable.getNumColumns(); colID++) {%%00010  var colType = knimeDataTable.getColumnTypes()[colID];%%00010  var colName = knimeDataTable.getColumnNames()[colID];%%00010  //console.log('colomn name',colName)%%00010  if (colType === &quot;number&quot;) {%%00010    dataset.push({%%00010      name: colName,%%00010      //values: data.map(function(d) { // Data%%00010      //       return {x: d.data[x_column], y: d.data[colID]};%%00010      //       })%%00010      data: data.map(function(d) {%%00010        return [parseInt(d.data[x_column]),d.data[colID]];%%00010      })%%00010    });%%00010    console.log(dataset)%%00010  }%%00010}%%00010%%00010var chartData = {%%00010  series: dataset,%%00010  title: &quot;Fat &amp; Protein supply [t]&quot;,%%00010  timeAxis: x_values,%%00010  unit: &quot;t/cap&quot;%%00010};%%00010%%00010//console.log('chartData', chartData)%%00010%%00010require(['highcharts/modules/exporting', 'highcharts/modules/export-data'], function({Highcharts}) {%%00010    %%00010    Highcharts.chart('container', {%%00010    chart: {%%00010      renderTo: ServiceWorkerContainer,%%00010      type: &quot;area&quot;,%%00010      spacingBottom: 30%%00010    },%%00010    title: {%%00010      text: chartData.title%%00010    },%%00010    //subtitle: {%%00010    //    text: 'Source: Wikipedia.org'%%00010    //},%%00010    xAxis: {%%00010        allowDecimals: false,%%00010        labels: {%%00010            formatter: function () {%%00010                return this.value; // clean, unformatted number for year%%00010            }%%00010        }%%00010    },%%00010    yAxis: {%%00010      title: {%%00010        text: chartData.unit%%00010      },%%00010      //labels: {%%00010       // formatter: function() {%%00010       //   return this.value / 1000 + 'k';%%00010       // }%%00010      //}%%00010    },%%00010    tooltip: {%%00010      split: true,%%00010      //pointFormat: '&lt;b&gt;{point.y:,.0f}&lt;/b&gt;&lt;br/&gt; in {point.x}',%%00010      pointFormat: '&lt;span style=&quot;color:{series.color}&quot;&gt;{series.name}&lt;/span&gt;: &lt;b&gt;{point.y:,.0f}&lt;/b&gt; ({point.percentage:.1f}%)&lt;br/&gt;',%%00010      valueDecimals: 2%%00010      //valueSuffix: &quot; millions&quot;%%00010    },%%00010    plotOptions: {%%00010      area: {%%00010        stacking: &quot;normal&quot;,%%00010        lineColor: &quot;#666666&quot;,%%00010        lineWidth: 1,%%00010        marker: {%%00010          lineWidth: 1,%%00010          lineColor: &quot;#666666&quot;,%%00010          enabled:false,%%00010          symbol:'circle',%%00010          radius:2%%00010        }%%00010      }%%00010    },%%00010    responsive: {%%00010      rules: [%%00010        {%%00010          condition: {%%00010            maxWidth: 500%%00010          }%%00010        }%%00010      ]%%00010    },%%00010    series: chartData.series%%00010  });%%00010});%%00010"/>
<entry key="jsSVGCode" type="xstring" value=""/>
<entry key="cssCode" type="xstring" value="body {%%00010    font-family: sans-serif;%%00010}%%00010h1 {%%00010    font-size: 1.5em;%%00010    font-weight: bold;%%00010}%%00010.success {%%00010    color: #006633;%%00010    font-weight: bold;%%00010}%%00010%%00010.failure {%%00010    color: #990000;%%00010    font-weight: bold;%%00010}%%00010%%00010#container {%%00010    min-width: 300px;%%00010    max-width: 1600px;%%00010    height: 500px;%%00010    margin: 1em auto;%%00010}%%00010"/>
<config key="jsDependencies">
<entry key="array-size" type="xint" value="0"/>
</config>
<config key="jsExports">
<entry key="array-size" type="xint" value="0"/>
</config>
<config key="cssDependencies">
<entry key="array-size" type="xint" value="0"/>
</config>
<entry key="knimeDataTableJSON" type="xstring" value="{&quot;@class&quot;:&quot;org.knime.js.core.JSONDataTable&quot;,&quot;id&quot;:&quot;a1973f01-816a-41aa-8736-05bf12e7a8d7&quot;,&quot;fragment&quot;:false,&quot;filtered&quot;:false,&quot;rows&quot;:[{&quot;data&quot;:[&quot;1990&quot;,0.04602828573199525,0.04263161020215077,0.02073695472528706],&quot;rowKey&quot;:&quot;Row0&quot;},{&quot;data&quot;:[&quot;1991&quot;,0.04667167051141453,0.04203447066854717,0.020607891062423812],&quot;rowKey&quot;:&quot;Row1&quot;},{&quot;data&quot;:[&quot;1992&quot;,0.04958059892015907,0.04251343254508594,0.020772307003553165],&quot;rowKey&quot;:&quot;Row2&quot;},{&quot;data&quot;:[&quot;1993&quot;,0.04796183989588196,0.04185350254894513,0.019860532727851425],&quot;rowKey&quot;:&quot;Row3&quot;},{&quot;data&quot;:[&quot;1994&quot;,0.046378917614514646,0.04205101262051105,0.01996104422412177],&quot;rowKey&quot;:&quot;Row4&quot;},{&quot;data&quot;:[&quot;1995&quot;,0.0457540427604286,0.0417420990982645,0.01990783184966621],&quot;rowKey&quot;:&quot;Row5&quot;},{&quot;data&quot;:[&quot;1996&quot;,0.04701240529948659,0.04279412104132505,0.020356738458778532],&quot;rowKey&quot;:&quot;Row6&quot;},{&quot;data&quot;:[&quot;1997&quot;,0.04816494236515996,0.044115795914898226,0.020410169561606684],&quot;rowKey&quot;:&quot;Row7&quot;},{&quot;data&quot;:[&quot;1998&quot;,0.047983370888466916,0.04451373762077778,0.020606376385979785],&quot;rowKey&quot;:&quot;Row8&quot;},{&quot;data&quot;:[&quot;1999&quot;,0.04761532832697638,0.04476107507810251,0.020439732361039017],&quot;rowKey&quot;:&quot;Row9&quot;},{&quot;data&quot;:[&quot;2000&quot;,0.04740638521745681,0.04447330785157656,0.020281177487211876],&quot;rowKey&quot;:&quot;Row10&quot;},{&quot;data&quot;:[&quot;2001&quot;,0.04824845102661828,0.045215139871382044,0.020829699591063188],&quot;rowKey&quot;:&quot;Row11&quot;},{&quot;data&quot;:[&quot;2002&quot;,0.0465910314987986,0.04601634426763383,0.021207064002663367],&quot;rowKey&quot;:&quot;Row12&quot;},{&quot;data&quot;:[&quot;2003&quot;,0.04579525474217596,0.04680629239043523,0.02215052403178112],&quot;rowKey&quot;:&quot;Row13&quot;},{&quot;data&quot;:[&quot;2004&quot;,0.04757773284765112,0.04689256369973578,0.022302590161281697],&quot;rowKey&quot;:&quot;Row14&quot;},{&quot;data&quot;:[&quot;2005&quot;,0.04826760887629693,0.047022854221616006,0.02240931612020656],&quot;rowKey&quot;:&quot;Row15&quot;},{&quot;data&quot;:[&quot;2006&quot;,0.050678131079925894,0.04707712997602413,0.02239127759372642],&quot;rowKey&quot;:&quot;Row16&quot;},{&quot;data&quot;:[&quot;2007&quot;,0.048903512015951014,0.046807838301669465,0.02227096863320483],&quot;rowKey&quot;:&quot;Row17&quot;},{&quot;data&quot;:[&quot;2008&quot;,0.04863563903523703,0.046157560081955595,0.02177669855566276],&quot;rowKey&quot;:&quot;Row18&quot;},{&quot;data&quot;:[&quot;2009&quot;,0.047494008334800684,0.0447898893532429,0.021157403142895548],&quot;rowKey&quot;:&quot;Row19&quot;},{&quot;data&quot;:[&quot;2010&quot;,0.04731752497541102,0.044572150946582685,0.021213718712111612],&quot;rowKey&quot;:&quot;Row20&quot;},{&quot;data&quot;:[&quot;2011&quot;,0.04636627234906361,0.044568527863899685,0.021208462802377093],&quot;rowKey&quot;:&quot;Row21&quot;},{&quot;data&quot;:[&quot;2012&quot;,0.046105846472575915,0.04459460275157598,0.021157628278632414],&quot;rowKey&quot;:&quot;Row22&quot;},{&quot;data&quot;:[&quot;2013&quot;,0.04609835254434213,0.04460856244818745,0.020787108706061142],&quot;rowKey&quot;:&quot;Row23&quot;},{&quot;data&quot;:[&quot;2014&quot;,0.04704463639633821,0.04384226375477037,0.020095786909181932],&quot;rowKey&quot;:&quot;Row24&quot;},{&quot;data&quot;:[&quot;2015&quot;,0.04707964641265879,0.044523166363157014,0.020788981860386163],&quot;rowKey&quot;:&quot;Row25&quot;},{&quot;data&quot;:[&quot;2016&quot;,0.0468329823018975,0.044785216062145285,0.020779760398143766],&quot;rowKey&quot;:&quot;Row26&quot;},{&quot;data&quot;:[&quot;2017&quot;,0.04720877774158551,0.04457426223987724,0.020805883203723608],&quot;rowKey&quot;:&quot;Row27&quot;},{&quot;data&quot;:[&quot;2018&quot;,0.046771037380919894,0.044280256069899555,0.020606088952426885],&quot;rowKey&quot;:&quot;Row28&quot;},{&quot;data&quot;:[&quot;2019&quot;,0.04662473348473292,0.04426052495528854,0.020534093192743484],&quot;rowKey&quot;:&quot;Row29&quot;},{&quot;data&quot;:[&quot;2020&quot;,0.04596731953156342,0.04375341819961568,0.02023645770408482],&quot;rowKey&quot;:&quot;Row30&quot;},{&quot;data&quot;:[&quot;2021&quot;,0.04561227683797582,0.04353142265300094,0.02007145536698707],&quot;rowKey&quot;:&quot;Row31&quot;},{&quot;data&quot;:[&quot;2022&quot;,0.04527597421412523,0.043325447355248445,0.01991418114195267],&quot;rowKey&quot;:&quot;Row32&quot;},{&quot;data&quot;:[&quot;2023&quot;,0.044960436987377235,0.043137592259901,0.019765532594128037],&quot;rowKey&quot;:&quot;Row33&quot;},{&quot;data&quot;:[&quot;2024&quot;,0.04465727593393678,0.04295995789646946,0.01962182708723992],&quot;rowKey&quot;:&quot;Row34&quot;},{&quot;data&quot;:[&quot;2025&quot;,0.04435590072501148,0.04278243556730165,0.019478421301180385],&quot;rowKey&quot;:&quot;Row35&quot;},{&quot;data&quot;:[&quot;2026&quot;,0.044063900029529424,0.04261238845045833,0.019338659717276628],&quot;rowKey&quot;:&quot;Row36&quot;},{&quot;data&quot;:[&quot;2027&quot;,0.04377098890810428,0.04243992563042161,0.01919803834247076],&quot;rowKey&quot;:&quot;Row37&quot;},{&quot;data&quot;:[&quot;2028&quot;,0.04348654739060354,0.042274167959704394,0.01906068319145942],&quot;rowKey&quot;:&quot;Row38&quot;},{&quot;data&quot;:[&quot;2029&quot;,0.04320789991696417,0.042112580465753675,0.018925428024595282],&quot;rowKey&quot;:&quot;Row39&quot;},{&quot;data&quot;:[&quot;2030&quot;,0.04293612977141549,0.04195627342138466,0.018792754049716004],&quot;rowKey&quot;:&quot;Row40&quot;},{&quot;data&quot;:[&quot;2031&quot;,0.04267107296046796,0.04180514538843164,0.018662594619051363],&quot;rowKey&quot;:&quot;Row41&quot;},{&quot;data&quot;:[&quot;2032&quot;,0.042413170553107414,0.04165968692078491,0.018535146757874703],&quot;rowKey&quot;:&quot;Row42&quot;},{&quot;data&quot;:[&quot;2033&quot;,0.04215988579660583,0.04151745995982821,0.018409305641651046],&quot;rowKey&quot;:&quot;Row43&quot;},{&quot;data&quot;:[&quot;2034&quot;,0.041910534616696346,0.041377829340450326,0.01828477757172296],&quot;rowKey&quot;:&quot;Row44&quot;},{&quot;data&quot;:[&quot;2035&quot;,0.041666203829786835,0.041241905280492125,0.018162041110927785],&quot;rowKey&quot;:&quot;Row45&quot;},{&quot;data&quot;:[&quot;2036&quot;,0.04142736580938264,0.04111019871365283,0.018041304849316923],&quot;rowKey&quot;:&quot;Row46&quot;},{&quot;data&quot;:[&quot;2037&quot;,0.04119676839660015,0.04098548863971887,0.017923765878301974],&quot;rowKey&quot;:&quot;Row47&quot;},{&quot;data&quot;:[&quot;2038&quot;,0.040967415170534045,0.040860862439109275,0.017806380507252615],&quot;rowKey&quot;:&quot;Row48&quot;},{&quot;data&quot;:[&quot;2039&quot;,0.040742677746359666,0.04073970356859373,0.017690618341014524],&quot;rowKey&quot;:&quot;Row49&quot;},{&quot;data&quot;:[&quot;2040&quot;,0.0405213486051187,0.04062083875468697,0.017575956273691122],&quot;rowKey&quot;:&quot;Row50&quot;},{&quot;data&quot;:[&quot;2041&quot;,0.04030336772167798,0.040504235296188074,0.017462370028673877],&quot;rowKey&quot;:&quot;Row51&quot;},{&quot;data&quot;:[&quot;2042&quot;,0.040087026075237064,0.04038819808581595,0.01734912126700899],&quot;rowKey&quot;:&quot;Row52&quot;},{&quot;data&quot;:[&quot;2043&quot;,0.039875036297030056,0.040275480379951295,0.017237385989924102],&quot;rowKey&quot;:&quot;Row53&quot;},{&quot;data&quot;:[&quot;2044&quot;,0.039666234871953934,0.04016493761461142,0.017126660657597523],&quot;rowKey&quot;:&quot;Row54&quot;},{&quot;data&quot;:[&quot;2045&quot;,0.039460569455415664,0.04005654102717196,0.017016922807228455],&quot;rowKey&quot;:&quot;Row55&quot;},{&quot;data&quot;:[&quot;2046&quot;,0.03926119405405682,0.03995352384958301,0.016909530581421486],&quot;rowKey&quot;:&quot;Row56&quot;},{&quot;data&quot;:[&quot;2047&quot;,0.03906533986983657,0.03985310865180473,0.01680328700894205],&quot;rowKey&quot;:&quot;Row57&quot;},{&quot;data&quot;:[&quot;2048&quot;,0.03887347692121095,0.03975580194933819,0.016698392018652287],&quot;rowKey&quot;:&quot;Row58&quot;},{&quot;data&quot;:[&quot;2049&quot;,0.03868501682023608,0.03966102956584414,0.01659458993055911],&quot;rowKey&quot;:&quot;Row59&quot;},{&quot;data&quot;:[&quot;2050&quot;,0.03850562422701055,0.03957463767585789,0.01649430453549874],&quot;rowKey&quot;:&quot;Row60&quot;}],&quot;spec&quot;:{&quot;@class&quot;:&quot;org.knime.js.core.JSONDataTableSpec&quot;,&quot;colNames&quot;:[&quot;Years&quot;,&quot;dat_total-supply_fat-supply&quot;,&quot;dat_total-supply_protein-supply&quot;,&quot;dat_total-supply_animal-protein-supply&quot;],&quot;maxValues&quot;:[&quot;2050&quot;,0.050678131079925894,0.04707712997602413,0.02240931612020656],&quot;hiddenColumns&quot;:[],&quot;filterIds&quot;:[null,null,null,null],&quot;numRows&quot;:61,&quot;possibleValues&quot;:[[&quot;1990&quot;,&quot;1991&quot;,&quot;1992&quot;,&quot;1993&quot;,&quot;1994&quot;,&quot;1995&quot;,&quot;1996&quot;,&quot;1997&quot;,&quot;1998&quot;,&quot;1999&quot;,&quot;2000&quot;,&quot;2001&quot;,&quot;2002&quot;,&quot;2003&quot;,&quot;2004&quot;,&quot;2005&quot;,&quot;2006&quot;,&quot;2007&quot;,&quot;2008&quot;,&quot;2009&quot;,&quot;2010&quot;,&quot;2011&quot;,&quot;2012&quot;,&quot;2013&quot;,&quot;2014&quot;,&quot;2015&quot;,&quot;2016&quot;,&quot;2017&quot;,&quot;2018&quot;,&quot;2019&quot;,&quot;2020&quot;,&quot;2021&quot;,&quot;2022&quot;,&quot;2023&quot;,&quot;2024&quot;,&quot;2025&quot;,&quot;2026&quot;,&quot;2027&quot;,&quot;2028&quot;,&quot;2029&quot;,&quot;2030&quot;,&quot;2031&quot;,&quot;2032&quot;,&quot;2033&quot;,&quot;2034&quot;,&quot;2035&quot;,&quot;2036&quot;,&quot;2037&quot;,&quot;2038&quot;,&quot;2039&quot;,&quot;2040&quot;,&quot;2041&quot;,&quot;2042&quot;,&quot;2043&quot;,&quot;2044&quot;,&quot;2045&quot;,&quot;2046&quot;,&quot;2047&quot;,&quot;2048&quot;,&quot;2049&quot;,&quot;2050&quot;],null,null,null],&quot;rowColorValues&quot;:[&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;],&quot;containsMissingValues&quot;:[false,false,false,false],&quot;knimeTypes&quot;:[&quot;String&quot;,&quot;Number (double)&quot;,&quot;Number (double)&quot;,&quot;Number (double)&quot;],&quot;colTypes&quot;:[&quot;string&quot;,&quot;number&quot;,&quot;number&quot;,&quot;number&quot;],&quot;colorModels&quot;:[],&quot;numColumns&quot;:4,&quot;extensionNames&quot;:[],&quot;extensionTypes&quot;:[],&quot;minValues&quot;:[&quot;1990&quot;,0.03850562422701055,0.03957463767585789,0.01649430453549874],&quot;rowSizeValues&quot;:null,&quot;numExtensions&quot;:0},&quot;dataHash&quot;:null,&quot;totalFilteredRows&quot;:0,&quot;fragmentFirstRowIndex&quot;:0,&quot;totalRows&quot;:0}"/>
</config>
