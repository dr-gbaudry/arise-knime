<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="viewRepresentation">
<entry key="jsCode" type="xstring" value="var body = document.getElementsByTagName(&quot;body&quot;)[0];%%00010var html = '&lt;script src=&quot;https://code.highcharts.com/highcharts.js&quot;&gt;&lt;/script&gt;';%%00010html += '&lt;script src=&quot;https://code.highcharts.com/modules/exporting.js&quot;&gt;&lt;/script&gt;';%%00010html += '&lt;script src=&quot;https://code.highcharts.com/modules/export-data.js&quot;&gt;&lt;/script&gt;';%%00010html += '&lt;div id=&quot;container&quot;&gt;&lt;/div&gt;';%%00010body.innerHTML = html;%%00010%%00010require.config({%%00010    packages: [{%%00010        name: 'highcharts',%%00010        main: 'highcharts'%%00010    }],%%00010    paths: {%%00010        // Change this to your server if you do not wish to use our CDN.%%00010        'highcharts': 'https://code.highcharts.com'%%00010    }%%00010});%%00010%%00010%%00010var data = knimeDataTable.getRows();%%00010// Extract Years column and x values%%00010var x_column_name = &quot;Years&quot;;%%00010var x_column = knimeDataTable.getColumnNames().indexOf(x_column_name);%%00010var x_values = knimeDataTable.getColumn(x_column);%%00010// Create dataset for values%%00010var dataset = [];%%00010%%00010for (var colID = 0; colID &lt; knimeDataTable.getNumColumns(); colID++) {%%00010  var colType = knimeDataTable.getColumnTypes()[colID];%%00010  var colName = knimeDataTable.getColumnNames()[colID];%%00010  //console.log('colomn name',colName)%%00010  if (colType === &quot;number&quot;) {%%00010    dataset.push({%%00010      name: colName,%%00010      //values: data.map(function(d) { // Data%%00010      //       return {x: d.data[x_column], y: d.data[colID]};%%00010      //       })%%00010      data: data.map(function(d) {%%00010        return [parseInt(d.data[x_column]),d.data[colID]];%%00010      })%%00010    });%%00010    console.log(dataset)%%00010  }%%00010}%%00010%%00010var chartData = {%%00010  series: dataset,%%00010  title: &quot;Fat &amp; Protein supply [t]&quot;,%%00010  timeAxis: x_values,%%00010  unit: &quot;g/capita/day&quot;%%00010};%%00010%%00010//console.log('chartData', chartData)%%00010%%00010require(['highcharts/modules/exporting', 'highcharts/modules/export-data'], function({Highcharts}) {%%00010    %%00010    Highcharts.chart('container', {%%00010    chart: {%%00010      renderTo: ServiceWorkerContainer,%%00010      type: &quot;line&quot;,%%00010      spacingBottom: 30%%00010    },%%00010    title: {%%00010      text: chartData.title%%00010    },%%00010    //subtitle: {%%00010    //    text: 'Source: Wikipedia.org'%%00010    //},%%00010    xAxis: {%%00010        allowDecimals: false,%%00010        labels: {%%00010            formatter: function () {%%00010                return this.value; // clean, unformatted number for year%%00010            }%%00010        }%%00010    },%%00010    yAxis: {%%00010      title: {%%00010        text: chartData.unit%%00010      },%%00010      //labels: {%%00010       // formatter: function() {%%00010       //   return this.value / 1000 + 'k';%%00010       // }%%00010      //}%%00010    },%%00010    tooltip: {%%00010      split: true,%%00010      //pointFormat: '&lt;b&gt;{point.y:,.0f}&lt;/b&gt;&lt;br/&gt; in {point.x}',%%00010      pointFormat: '&lt;span style=&quot;color:{series.color}&quot;&gt;{series.name}&lt;/span&gt;: &lt;b&gt;{point.y:,.0f}&lt;/b&gt; ({point.percentage:.1f}%)&lt;br/&gt;',%%00010      valueDecimals: 2%%00010      //valueSuffix: &quot; millions&quot;%%00010    },%%00010    plotOptions: {%%00010      area: {%%00010        stacking: &quot;normal&quot;,%%00010        lineColor: &quot;#666666&quot;,%%00010        lineWidth: 1,%%00010        marker: {%%00010          lineWidth: 1,%%00010          lineColor: &quot;#666666&quot;,%%00010          enabled:false,%%00010          symbol:'circle',%%00010          radius:2%%00010        }%%00010      }%%00010    },%%00010    responsive: {%%00010      rules: [%%00010        {%%00010          condition: {%%00010            maxWidth: 500%%00010          }%%00010        }%%00010      ]%%00010    },%%00010    series: chartData.series%%00010  });%%00010});%%00010"/>
<entry key="jsSVGCode" type="xstring" value=""/>
<entry key="cssCode" type="xstring" value="body {%%00010    font-family: sans-serif;%%00010}%%00010h1 {%%00010    font-size: 1.5em;%%00010    font-weight: bold;%%00010}%%00010.success {%%00010    color: #006633;%%00010    font-weight: bold;%%00010}%%00010%%00010.failure {%%00010    color: #990000;%%00010    font-weight: bold;%%00010}%%00010%%00010#container {%%00010    min-width: 300px;%%00010    max-width: 1600px;%%00010    height: 500px;%%00010    margin: 1em auto;%%00010}%%00010"/>
<config key="jsDependencies">
<entry key="array-size" type="xint" value="0"/>
</config>
<config key="jsExports">
<entry key="array-size" type="xint" value="0"/>
</config>
<config key="cssDependencies">
<entry key="array-size" type="xint" value="0"/>
</config>
<entry key="knimeDataTableJSON" type="xstring" value="{&quot;@class&quot;:&quot;org.knime.js.core.JSONDataTable&quot;,&quot;id&quot;:&quot;6efd76ba-c914-420b-880d-fadd5c87942d&quot;,&quot;fragment&quot;:false,&quot;filtered&quot;:false,&quot;rows&quot;:[{&quot;data&quot;:[&quot;1990&quot;,126.10489115537642,116.79893089269773,56.81357402169182],&quot;rowKey&quot;:&quot;Row0&quot;},{&quot;data&quot;:[&quot;1991&quot;,127.86758916355568,115.16293218685608,56.45997494889014],&quot;rowKey&quot;:&quot;Row1&quot;},{&quot;data&quot;:[&quot;1992&quot;,135.83725595713173,116.47515649301812,56.9104295776167],&quot;rowKey&quot;:&quot;Row2&quot;},{&quot;data&quot;:[&quot;1993&quot;,131.4022997705851,114.66712912441126,54.41241788834547],&quot;rowKey&quot;:&quot;Row3&quot;},{&quot;data&quot;:[&quot;1994&quot;,127.06552644034376,115.20825260274226,54.68779184797624],&quot;rowKey&quot;:&quot;Row4&quot;},{&quot;data&quot;:[&quot;1995&quot;,125.353540555858,114.36191419409181,54.54200452215861],&quot;rowKey&quot;:&quot;Row5&quot;},{&quot;data&quot;:[&quot;1996&quot;,128.8011091215412,117.24416606406533,55.771885630715474],&quot;rowKey&quot;:&quot;Row6&quot;},{&quot;data&quot;:[&quot;1997&quot;,131.95874488633024,120.86519307874046,55.91827221234244],&quot;rowKey&quot;:&quot;Row7&quot;},{&quot;data&quot;:[&quot;1998&quot;,131.4612887907759,121.95544431682303,56.45582515045486],&quot;rowKey&quot;:&quot;Row8&quot;},{&quot;data&quot;:[&quot;1999&quot;,130.4529530159537,122.63308117942948,55.99926618257999],&quot;rowKey&quot;:&quot;Row9&quot;},{&quot;data&quot;:[&quot;2000&quot;,129.88050614628207,121.84467782696845,55.56486927232905],&quot;rowKey&quot;:&quot;Row10&quot;},{&quot;data&quot;:[&quot;2001&quot;,132.18753573735282,123.87709429926205,57.06766954182519],&quot;rowKey&quot;:&quot;Row11&quot;},{&quot;data&quot;:[&quot;2002&quot;,127.64666036407749,126.07217481498738,58.1015446317609],&quot;rowKey&quot;:&quot;Row12&quot;},{&quot;data&quot;:[&quot;2003&quot;,125.46645009376277,128.23641622567757,60.686366603495564],&quot;rowKey&quot;:&quot;Row13&quot;},{&quot;data&quot;:[&quot;2004&quot;,130.34995170376382,128.47277597482233,61.10298613220766],&quot;rowKey&quot;:&quot;Row14&quot;},{&quot;data&quot;:[&quot;2005&quot;,132.24002299622148,128.82973630517114,61.395386016749036],&quot;rowKey&quot;:&quot;Row15&quot;},{&quot;data&quot;:[&quot;2006&quot;,138.84419335108106,128.9784370006927,61.34596539674971],&quot;rowKey&quot;:&quot;Row16&quot;},{&quot;data&quot;:[&quot;2007&quot;,133.98222336141342,128.24065159887968,61.01635180957574],&quot;rowKey&quot;:&quot;Row17&quot;},{&quot;data&quot;:[&quot;2008&quot;,133.24832479145383,126.45906745309588,59.66218722711171],&quot;rowKey&quot;:&quot;Row18&quot;},{&quot;data&quot;:[&quot;2009&quot;,130.12056947907016,122.71202439820276,57.96548748307265],&quot;rowKey&quot;:&quot;Row19&quot;},{&quot;data&quot;:[&quot;2010&quot;,129.63705343078294,122.1154808242772,58.1197767122587],&quot;rowKey&quot;:&quot;Row20&quot;},{&quot;data&quot;:[&quot;2011&quot;,127.03088187781066,122.10555457045044,58.10537695970538],&quot;rowKey&quot;:&quot;Row21&quot;},{&quot;data&quot;:[&quot;2012&quot;,126.31738633292453,122.17699261816425,57.96610429330447],&quot;rowKey&quot;:&quot;Row22&quot;},{&quot;data&quot;:[&quot;2013&quot;,126.29685502290029,122.21523836192281,56.950982186822074],&quot;rowKey&quot;:&quot;Row23&quot;},{&quot;data&quot;:[&quot;2014&quot;,128.8894134955941,120.11578990780201,55.05694988554538],&quot;rowKey&quot;:&quot;Row24&quot;},{&quot;data&quot;:[&quot;2015&quot;,128.98533134756804,121.98127648746672,56.956114116428346],&quot;rowKey&quot;:&quot;Row25&quot;},{&quot;data&quot;:[&quot;2016&quot;,128.30953927004845,122.69922086107705,56.93084983656483],&quot;rowKey&quot;:&quot;Row26&quot;},{&quot;data&quot;:[&quot;2017&quot;,129.3391158068431,122.12126518940991,57.00241916620487],&quot;rowKey&quot;:&quot;Row27&quot;},{&quot;data&quot;:[&quot;2018&quot;,128.13982715947813,121.31576884136163,56.455037661276705],&quot;rowKey&quot;:&quot;Row28&quot;},{&quot;data&quot;:[&quot;2019&quot;,127.7389945711934,121.26171099365285,56.257789006582335],&quot;rowKey&quot;:&quot;Row29&quot;},{&quot;data&quot;:[&quot;2020&quot;,125.93786047093212,119.87237743036027,55.44234931978149],&quot;rowKey&quot;:&quot;Row30&quot;},{&quot;data&quot;:[&quot;2021&quot;,124.96514077220014,119.26417045941565,54.990288126774026],&quot;rowKey&quot;:&quot;Row31&quot;},{&quot;data&quot;:[&quot;2022&quot;,124.04376372976846,118.69985458080541,54.55939984331743],&quot;rowKey&quot;:&quot;Row32&quot;},{&quot;data&quot;:[&quot;2023&quot;,123.17927818567908,118.18518309184952,54.15214355198003],&quot;rowKey&quot;:&quot;Row33&quot;},{&quot;data&quot;:[&quot;2024&quot;,122.34869996538087,117.6985136078627,53.75842983841548],&quot;rowKey&quot;:&quot;Row34&quot;},{&quot;data&quot;:[&quot;2025&quot;,121.5230144697328,117.21215106706109,53.365537277797735],&quot;rowKey&quot;:&quot;Row35&quot;},{&quot;data&quot;:[&quot;2026&quot;,120.72301257230254,116.74626855982041,52.98262883257543],&quot;rowKey&quot;:&quot;Row36&quot;},{&quot;data&quot;:[&quot;2027&quot;,119.92051635724492,116.27376768773247,52.59736479586405],&quot;rowKey&quot;:&quot;Row37&quot;},{&quot;data&quot;:[&quot;2028&quot;,119.14122453626868,115.81963708756908,52.22104931740435],&quot;rowKey&quot;:&quot;Row38&quot;},{&quot;data&quot;:[&quot;2029&quot;,118.37780680790459,115.37693162911746,51.850487220112335],&quot;rowKey&quot;:&quot;Row39&quot;},{&quot;data&quot;:[&quot;2030&quot;,117.63323107412108,114.94869315567651,51.48699688161223],&quot;rowKey&quot;:&quot;Row40&quot;},{&quot;data&quot;:[&quot;2031&quot;,116.90704803769104,114.53464375446627,51.13039570527512],&quot;rowKey&quot;:&quot;Row41&quot;},{&quot;data&quot;:[&quot;2032&quot;,116.20046610678277,114.13612740873435,50.78122348636503],&quot;rowKey&quot;:&quot;Row42&quot;},{&quot;data&quot;:[&quot;2033&quot;,115.50653527399172,113.7464645059003,50.436453308378056],&quot;rowKey&quot;:&quot;Row43&quot;},{&quot;data&quot;:[&quot;2034&quot;,114.82338136326302,113.36391486759462,50.09528051746626],&quot;rowKey&quot;:&quot;Row44&quot;},{&quot;data&quot;:[&quot;2035&quot;,114.15398195376657,112.99152018650157,49.75901624467774],&quot;rowKey&quot;:&quot;Row45&quot;},{&quot;data&quot;:[&quot;2036&quot;,113.49963121947667,112.63068028096123,49.42823196959966],&quot;rowKey&quot;:&quot;Row46&quot;},{&quot;data&quot;:[&quot;2037&quot;,112.86785749214374,112.28900884894242,49.10620739469675],&quot;rowKey&quot;:&quot;Row47&quot;},{&quot;data&quot;:[&quot;2038&quot;,112.23949249550657,111.9475672068511,48.78460364161318],&quot;rowKey&quot;:&quot;Row48&quot;},{&quot;data&quot;:[&quot;2039&quot;,111.62377353132298,111.61562509916902,48.46744702495436],&quot;rowKey&quot;:&quot;Row49&quot;},{&quot;data&quot;:[&quot;2040&quot;,111.01739232850743,111.28996807802352,48.153304377894685],&quot;rowKey&quot;:&quot;Row50&quot;},{&quot;data&quot;:[&quot;2041&quot;,110.42018443464194,110.97050655108417,47.84210918917857],&quot;rowKey&quot;:&quot;Row51&quot;},{&quot;data&quot;:[&quot;2042&quot;,109.82746760100494,110.6525963888602,47.53183861237748],&quot;rowKey&quot;:&quot;Row52&quot;},{&quot;data&quot;:[&quot;2043&quot;,109.24667369391697,110.34378075944245,47.2257145686308],&quot;rowKey&quot;:&quot;Row53&quot;},{&quot;data&quot;:[&quot;2044&quot;,108.67461500079887,110.0409238711289,46.922357496797034],&quot;rowKey&quot;:&quot;Row54&quot;},{&quot;data&quot;:[&quot;2045&quot;,108.11114811180813,109.74394692220973,46.62170585495679],&quot;rowKey&quot;:&quot;Row55&quot;},{&quot;data&quot;:[&quot;2046&quot;,107.56491414094488,109.46170808232267,46.32748058171556],&quot;rowKey&quot;:&quot;Row56&quot;},{&quot;data&quot;:[&quot;2047&quot;,107.02832734022786,109.18659795417437,46.03640230386077],&quot;rowKey&quot;:&quot;Row57&quot;},{&quot;data&quot;:[&quot;2048&quot;,106.5026754314416,108.92000425145253,45.74901877169416],&quot;rowKey&quot;:&quot;Row58&quot;},{&quot;data&quot;:[&quot;2049&quot;,105.98634639283813,108.66035388831192,45.464629492090985],&quot;rowKey&quot;:&quot;Row59&quot;},{&quot;data&quot;:[&quot;2050&quot;,105.49485984097072,108.42366378112744,45.18987498782382],&quot;rowKey&quot;:&quot;Row60&quot;}],&quot;spec&quot;:{&quot;@class&quot;:&quot;org.knime.js.core.JSONDataTableSpec&quot;,&quot;colNames&quot;:[&quot;Years&quot;,&quot;dat_total-supply_fat-supply&quot;,&quot;dat_total-supply_protein-supply&quot;,&quot;dat_total-supply_animal-protein-supply&quot;],&quot;maxValues&quot;:[&quot;2050&quot;,138.84419335108106,128.9784370006927,61.395386016749036],&quot;hiddenColumns&quot;:[],&quot;filterIds&quot;:[null,null,null,null],&quot;numRows&quot;:61,&quot;possibleValues&quot;:[[&quot;1990&quot;,&quot;1991&quot;,&quot;1992&quot;,&quot;1993&quot;,&quot;1994&quot;,&quot;1995&quot;,&quot;1996&quot;,&quot;1997&quot;,&quot;1998&quot;,&quot;1999&quot;,&quot;2000&quot;,&quot;2001&quot;,&quot;2002&quot;,&quot;2003&quot;,&quot;2004&quot;,&quot;2005&quot;,&quot;2006&quot;,&quot;2007&quot;,&quot;2008&quot;,&quot;2009&quot;,&quot;2010&quot;,&quot;2011&quot;,&quot;2012&quot;,&quot;2013&quot;,&quot;2014&quot;,&quot;2015&quot;,&quot;2016&quot;,&quot;2017&quot;,&quot;2018&quot;,&quot;2019&quot;,&quot;2020&quot;,&quot;2021&quot;,&quot;2022&quot;,&quot;2023&quot;,&quot;2024&quot;,&quot;2025&quot;,&quot;2026&quot;,&quot;2027&quot;,&quot;2028&quot;,&quot;2029&quot;,&quot;2030&quot;,&quot;2031&quot;,&quot;2032&quot;,&quot;2033&quot;,&quot;2034&quot;,&quot;2035&quot;,&quot;2036&quot;,&quot;2037&quot;,&quot;2038&quot;,&quot;2039&quot;,&quot;2040&quot;,&quot;2041&quot;,&quot;2042&quot;,&quot;2043&quot;,&quot;2044&quot;,&quot;2045&quot;,&quot;2046&quot;,&quot;2047&quot;,&quot;2048&quot;,&quot;2049&quot;,&quot;2050&quot;],null,null,null],&quot;rowColorValues&quot;:[&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;],&quot;containsMissingValues&quot;:[false,false,false,false],&quot;knimeTypes&quot;:[&quot;String&quot;,&quot;Number (double)&quot;,&quot;Number (double)&quot;,&quot;Number (double)&quot;],&quot;colTypes&quot;:[&quot;string&quot;,&quot;number&quot;,&quot;number&quot;,&quot;number&quot;],&quot;colorModels&quot;:[],&quot;numColumns&quot;:4,&quot;extensionNames&quot;:[],&quot;extensionTypes&quot;:[],&quot;minValues&quot;:[&quot;1990&quot;,105.49485984097072,108.42366378112744,45.18987498782382],&quot;rowSizeValues&quot;:null,&quot;numExtensions&quot;:0},&quot;dataHash&quot;:null,&quot;totalFilteredRows&quot;:0,&quot;fragmentFirstRowIndex&quot;:0,&quot;totalRows&quot;:0}"/>
</config>
