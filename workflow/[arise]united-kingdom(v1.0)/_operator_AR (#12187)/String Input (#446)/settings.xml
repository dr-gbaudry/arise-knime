<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
<entry key="node_file" type="xstring" value="settings.xml"/>
<config key="flow_stack">
<config key="Variable_0">
<entry key="type" type="xstring" value="variable"/>
<entry key="name" type="xstring" value="aggregation_pattern"/>
<entry key="class" type="xstring" value="STRING"/>
<entry key="value" type="xstring" value="dat_industrial-byproducts-feed-energy-content_(.*)\[kcal/t\]"/>
</config>
<config key="Variable_1">
<entry key="type" type="xstring" value="variable"/>
<entry key="name" type="xstring" value="aggregation_pattern"/>
<entry key="class" type="xstring" value="STRING"/>
<entry key="value" type="xstring" value="dat_industrial-byproducts-feed-energy-content_(.*)\[kcal/t\]"/>
</config>
</config>
<config key="internal_node_subsettings">
<entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
</config>
<config key="model">
<config key="defaultValue">
<entry key="string" type="xstring" value="identifier"/>
</config>
<entry key="label" type="xstring" value="Pattern to select second group of columns to use (matched 1-1 with the first group, use capture group for iterator)"/>
<entry key="description" type="xstring" value="Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. %%00010Example: single column &quot;sector_demand_.*&quot;, multiple columns &quot;sector_variable_(.*)\[.*&quot;%%00010%%00010This pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.%%00010Example: &quot;sector_variable_(.*)_(.*)\[.*&quot;%%00010%%00010Note that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).%%00010%%00010Only in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is &quot;sector_variable_(.*)_(?P&lt;i&gt;.*)\[.*&quot;. This give the name &quot;i&quot; (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern."/>
<entry key="hideInWizard" type="xboolean" value="false"/>
<entry key="hideInDialog" type="xboolean" value="false"/>
<entry key="required" type="xboolean" value="true"/>
<entry key="parameterName" type="xstring" value="string-input"/>
<entry key="customCSS" type="xstring" value=""/>
<entry key="flowvariablename" type="xstring" value="aggregation_pattern"/>
<entry key="regex" type="xstring" value=""/>
<entry key="error_message" type="xstring" value=""/>
<entry key="editorType" type="xstring" value="Single-line"/>
<entry key="multilineEditorWidth" type="xint" value="60"/>
<entry key="multilineEditorHeight" type="xint" value="5"/>
</config>
<config key="nodeAnnotation">
<entry key="text" type="xstring" value="Common identifier"/>
<entry key="bgcolor" type="xint" value="16777215"/>
<entry key="x-coordinate" type="xint" value="82"/>
<entry key="y-coordinate" type="xint" value="729"/>
<entry key="width" type="xint" value="106"/>
<entry key="height" type="xint" value="15"/>
<entry key="alignment" type="xstring" value="CENTER"/>
<entry key="borderSize" type="xint" value="0"/>
<entry key="borderColor" type="xint" value="16777215"/>
<entry key="defFontSize" type="xint" value="9"/>
<entry key="annotation-version" type="xint" value="20151123"/>
<config key="styles"/>
</config>
<entry key="customDescription" type="xstring" isnull="true" value=""/>
<entry key="state" type="xstring" value="EXECUTED"/>
<entry key="factory" type="xstring" value="org.knime.js.base.node.quickform.input.string.StringInputQuickFormNodeFactory"/>
<entry key="node-name" type="xstring" value="String Input"/>
<entry key="node-bundle-name" type="xstring" value="KNIME Quick Form Nodes"/>
<entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.js.quickforms"/>
<entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-bundle-version" type="xstring" value="4.3.3.v202104281301"/>
<entry key="node-feature-name" type="xstring" value="KNIME Quick Forms"/>
<entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.js.quickforms.feature.group"/>
<entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-feature-version" type="xstring" value="4.3.3.v202105242123"/>
<config key="factory_settings"/>
<entry key="name" type="xstring" value="String Input"/>
<entry key="hasContent" type="xboolean" value="true"/>
<entry key="isInactive" type="xboolean" value="false"/>
<config key="ports">
<config key="port_1">
<entry key="index" type="xint" value="1"/>
<entry key="port_spec_class" type="xstring" value="org.knime.core.node.port.flowvariable.FlowVariablePortObjectSpec"/>
<entry key="port_object_class" type="xstring" value="org.knime.core.node.port.flowvariable.FlowVariablePortObject"/>
<entry key="port_object_summary" type="xstring" value="Variables connection"/>
<entry key="port_spec_location" type="xstring" value="spec/spec.zip"/>
<entry key="port_object_location" type="xstring" value="object/portobject.zip"/>
<entry key="port_dir_location" type="xstring" value="port_1"/>
</config>
</config>
<config key="filestores">
<entry key="file_store_location" type="xstring" isnull="true" value=""/>
<entry key="file_store_id" type="xstring" value="7aa81aad-549f-4439-ab45-267a8c0e66a9"/>
</config>
</config>
